{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-client/node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_typeof2","obj","Symbol","iterator","_typeof","_possibleConstructorReturn","self","call","assertThisInitialized","Emitter","key","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","Array","len","slice","emitReserved","listeners","hasListeners","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","globalThis","clearTimeoutFn","BASE64_OVERHEAD","byteLength","str","c","l","charCodeAt","utf8Length","Math","ceil","size","_assertThisInitialized","ReferenceError","globalThisShim","window","Function","PACKET_TYPES","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","split","readAsDataURL","encodePacket","supportsBinary","isView","buffer","chars","lookup","Uint8Array","decodeBase64Packet","binaryType","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","decode","mapBinary","decodePacket","encodedPacket","charAt","substring","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","packet","join","decodePayload","encodedPayload","decodedPacket","protocol","Parent","Class","Reflect","construct","sham","Proxy","Date","e","isNativeReflectConstruct","a","instance","_cache","Map","undefined","indexOf","has","get","set","Wrapper","enumerable","TransportError","reason","description","context","Error","Transport","query","readyState","socket","doOpen","doClose","onClose","write","onPacket","details","_setPrototypeOf","encode","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","target","property","receiver","base","object","desc","getOwnPropertyDescriptor","prev","alphabet","map","seed","num","encoded","floor","yeast","now","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","empty","hasXHR2","responseType","Polling","polling","location","isSSL","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","onOpen","close","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","assign","Request","uri","req","request","method","xhrStatus","onError","onData","pollXhr","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","terminationEvent","transports","websocket","WS","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","name","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","autoUnref","unref","getWritablePackets","payloadSize","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","isBinary","deconstructPacket","buffers","packetData","pack","_deconstructPacket","placeholder","_placeholder","isArray","newData","attachments","reconstructPacket","_reconstructPacket","PacketType","Encoder","replacer","EVENT","ACK","hasBinary","toJSON","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","ev","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onopen","onpacket","subEvents","_readyState","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_packet","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","listener","_anyOutgoingListeners","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","isReactNative","navigator","product","toLowerCase","check","protocols","headers","ws","usingBrowserWebSocket","WebSocket","defaultBinaryType","addEventListeners","_socket","closeEvent","onmessage","lastPacket","Buffer","nextTick","Promise","resolve","then","MozWebSocket"],"mappings":"kGAAe,SAASA,EAAgBC,GAItC,OAHAD,EAAkBE,OAAOC,eAAiBD,OAAOE,eAAiB,SAAyBH,GACzF,OAAOA,EAAEI,WAAaH,OAAOE,eAAeH,KAEvBA,GAJzB,mC,iCCAA,+CACe,SAASK,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASG,UAAYR,OAAOS,OAAOH,GAAcA,EAAWE,UAAW,CACrEE,YAAa,CACXC,MAAON,EACPO,UAAU,EACVC,cAAc,KAGdP,GAAY,YAAeD,EAAUC,K,iCCb3C,SAASQ,EAASC,GAA4T,OAA1OD,EAArD,oBAAXE,QAAoD,kBAApBA,OAAOC,SAAoC,SAAkBF,GAAO,cAAcA,GAA4B,SAAkBA,GAAO,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIL,cAAgBM,QAAUD,IAAQC,OAAOR,UAAY,gBAAkBO,IAA0BA,GAE/U,SAASG,EAAQH,GAW9B,OATEG,EADoB,oBAAXF,QAAuD,WAA9BF,EAASE,OAAOC,UACxC,SAAiBF,GACzB,OAAOD,EAASC,IAGR,SAAiBA,GACzB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIL,cAAgBM,QAAUD,IAAQC,OAAOR,UAAY,SAAWM,EAASC,KAIhHA,G,aCXF,SAASI,EAA2BC,EAAMC,GACvD,OAAIA,GAA2B,WAAlBH,EAAQG,IAAsC,oBAATA,EAI3C,OAAAC,EAAA,GAAsBF,GAHpBC,EAJX,mC,iCCMO,SAASE,EAAQR,GACtB,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIS,KAAOD,EAAQf,UACtBO,EAAIS,GAAOD,EAAQf,UAAUgB,GAE/B,OAAOT,EAfSU,CAAMV,GAPxB,kCAkCAQ,EAAQf,UAAUkB,GAClBH,EAAQf,UAAUmB,iBAAmB,SAASC,EAAOC,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,IACpCD,KAAKC,WAAW,IAAMH,GAASE,KAAKC,WAAW,IAAMH,IAAU,IAC7DI,KAAKH,GACDC,MAaTP,EAAQf,UAAUyB,KAAO,SAASL,EAAOC,GACvC,SAASH,IACPI,KAAKI,IAAIN,EAAOF,GAChBG,EAAGM,MAAML,KAAMM,WAKjB,OAFAV,EAAGG,GAAKA,EACRC,KAAKJ,GAAGE,EAAOF,GACRI,MAaTP,EAAQf,UAAU0B,IAClBX,EAAQf,UAAU6B,eAClBd,EAAQf,UAAU8B,mBAClBf,EAAQf,UAAU+B,oBAAsB,SAASX,EAAOC,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,GAGjC,GAAKK,UAAUI,OAEjB,OADAV,KAAKC,WAAa,GACXD,KAIT,IAUIW,EAVAC,EAAYZ,KAAKC,WAAW,IAAMH,GACtC,IAAKc,EAAW,OAAOZ,KAGvB,GAAI,GAAKM,UAAUI,OAEjB,cADOV,KAAKC,WAAW,IAAMH,GACtBE,KAKT,IAAK,IAAIa,EAAI,EAAGA,EAAID,EAAUF,OAAQG,IAEpC,IADAF,EAAKC,EAAUC,MACJd,GAAMY,EAAGZ,KAAOA,EAAI,CAC7Ba,EAAUE,OAAOD,EAAG,GACpB,MAUJ,OAJyB,IAArBD,EAAUF,eACLV,KAAKC,WAAW,IAAMH,GAGxBE,MAWTP,EAAQf,UAAUqC,KAAO,SAASjB,GAChCE,KAAKC,WAAaD,KAAKC,YAAc,GAKrC,IAHA,IAAIe,EAAO,IAAIC,MAAMX,UAAUI,OAAS,GACpCE,EAAYZ,KAAKC,WAAW,IAAMH,GAE7Be,EAAI,EAAGA,EAAIP,UAAUI,OAAQG,IACpCG,EAAKH,EAAI,GAAKP,UAAUO,GAG1B,GAAID,EAEG,CAAIC,EAAI,EAAb,IAAK,IAAWK,GADhBN,EAAYA,EAAUO,MAAM,IACIT,OAAQG,EAAIK,IAAOL,EACjDD,EAAUC,GAAGR,MAAML,KAAMgB,GAI7B,OAAOhB,MAITP,EAAQf,UAAU0C,aAAe3B,EAAQf,UAAUqC,KAUnDtB,EAAQf,UAAU2C,UAAY,SAASvB,GAErC,OADAE,KAAKC,WAAaD,KAAKC,YAAc,GAC9BD,KAAKC,WAAW,IAAMH,IAAU,IAWzCL,EAAQf,UAAU4C,aAAe,SAASxB,GACxC,QAAUE,KAAKqB,UAAUvB,GAAOY,S,iCCvKlC,mHACO,SAASa,EAAKtC,GAAc,2BAANuC,EAAM,iCAANA,EAAM,kBAC/B,OAAOA,EAAKC,QAAO,SAACC,EAAKC,GAIrB,OAHI1C,EAAI2C,eAAeD,KACnBD,EAAIC,GAAK1C,EAAI0C,IAEVD,IACR,IAGP,IAAMG,EAAqBC,WACrBC,EAAuBC,aACtB,SAASC,EAAsBhD,EAAKiD,GACnCA,EAAKC,iBACLlD,EAAImD,aAAeP,EAAmBQ,KAAKC,KAC3CrD,EAAIsD,eAAiBR,EAAqBM,KAAKC,OAG/CrD,EAAImD,aAAeN,WAAWO,KAAKC,KACnCrD,EAAIsD,eAAiBP,aAAaK,KAAKC,MAI/C,IAAME,EAAkB,KAEjB,SAASC,EAAWxD,GACvB,MAAmB,kBAARA,EAMf,SAAoByD,GAEhB,IADA,IAAIC,EAAI,EAAGjC,EAAS,EACXG,EAAI,EAAG+B,EAAIF,EAAIhC,OAAQG,EAAI+B,EAAG/B,KACnC8B,EAAID,EAAIG,WAAWhC,IACX,IACJH,GAAU,EAELiC,EAAI,KACTjC,GAAU,EAELiC,EAAI,OAAUA,GAAK,MACxBjC,GAAU,GAGVG,IACAH,GAAU,GAGlB,OAAOA,EAvBIoC,CAAW7D,GAGf8D,KAAKC,MAAM/D,EAAIwD,YAAcxD,EAAIgE,MAAQT,K,iCC9BrC,SAASU,EAAuB5D,GAC7C,QAAa,IAATA,EACF,MAAM,IAAI6D,eAAe,6DAG3B,OAAO7D,EALT,mC,iCCAA,kCAAO,IAAM8D,EACW,qBAAT9D,KACAA,KAEgB,qBAAX+D,OACLA,OAGAC,SAAS,cAATA,I,iCCRf,IAAMC,EAAerF,OAAOS,OAAO,MACnC4E,EAAY,KAAW,IACvBA,EAAY,MAAY,IACxBA,EAAY,KAAW,IACvBA,EAAY,KAAW,IACvBA,EAAY,QAAc,IAC1BA,EAAY,QAAc,IAC1BA,EAAY,KAAW,IACvB,IAAMC,EAAuBtF,OAAOS,OAAO,MAC3CT,OAAOuF,KAAKF,GAAcG,SAAQ,SAAAhE,GAC9B8D,EAAqBD,EAAa7D,IAAQA,KCP9C,IDSA,IAAMiE,EAAe,CAAEC,KAAM,QAASC,KAAM,gBEXtCC,EAAiC,oBAATC,MACT,qBAATA,MACqC,6BAAzC7F,OAAOQ,UAAUsF,SAASzE,KAAKwE,MACjCE,EAA+C,oBAAhBC,YA4B/BC,EAAqB,SAACN,EAAMO,GAC9B,IAAMC,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,IAAMC,EAAUH,EAAWI,OAAOC,MAAM,KAAK,GAC7CN,EAAS,IAAMI,IAEZH,EAAWM,cAAcd,IAErBe,EA7BM,SAAC,EAAgBC,EAAgBT,GAAa,IALpDnF,EAKS2E,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,KAC1B,OAAIC,GAAkBD,aAAgBE,KAC9Bc,EACOT,EAASP,GAGTM,EAAmBN,EAAMO,GAG/BH,IACJJ,aAAgBK,cAfVjF,EAegC4E,EAdN,oBAAvBK,YAAYY,OACpBZ,YAAYY,OAAO7F,GACnBA,GAAOA,EAAI8F,kBAAkBb,cAa3BW,EACOT,EAASP,GAGTM,EAAmB,IAAIJ,KAAK,CAACF,IAAQO,GAI7CA,EAASb,EAAaK,IAASC,GAAQ,MD9B5CmB,EAAQ,mEAERC,EAA+B,qBAAfC,WAA6B,GAAK,IAAIA,WAAW,KAC9DrE,EAAI,EAAGA,EAAImE,EAAMtE,OAAQG,IAC9BoE,EAAOD,EAAMnC,WAAWhC,IAAMA,EAE3B,IEJDoD,EAA+C,oBAAhBC,YA4B/BiB,EAAqB,SAACtB,EAAMuB,GAC9B,GAAInB,EAAuB,CACvB,IAAMoB,EFVQ,SAACC,GACnB,IAA8DzE,EAAU0E,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAO5E,OAAeQ,EAAMoE,EAAO5E,OAAWkF,EAAI,EACnC,MAA9BN,EAAOA,EAAO5E,OAAS,KACvBiF,IACkC,MAA9BL,EAAOA,EAAO5E,OAAS,IACvBiF,KAGR,IAAME,EAAc,IAAI3B,YAAYyB,GAAeG,EAAQ,IAAIZ,WAAWW,GAC1E,IAAKhF,EAAI,EAAGA,EAAIK,EAAKL,GAAK,EACtB0E,EAAWN,EAAOK,EAAOzC,WAAWhC,IACpC2E,EAAWP,EAAOK,EAAOzC,WAAWhC,EAAI,IACxC4E,EAAWR,EAAOK,EAAOzC,WAAWhC,EAAI,IACxC6E,EAAWT,EAAOK,EAAOzC,WAAWhC,EAAI,IACxCiF,EAAMF,KAAQL,GAAY,EAAMC,GAAY,EAC5CM,EAAMF,MAAoB,GAAXJ,IAAkB,EAAMC,GAAY,EACnDK,EAAMF,MAAoB,EAAXH,IAAiB,EAAiB,GAAXC,EAE1C,OAAOG,EERaE,CAAOlC,GACvB,OAAOmC,EAAUX,EAASD,GAG1B,MAAO,CAAEE,QAAQ,EAAMzB,SAGzBmC,EAAY,SAACnC,EAAMuB,GACrB,OAAQA,GACJ,IAAK,OACD,OAAOvB,aAAgBK,YAAc,IAAIH,KAAK,CAACF,IAASA,EAC5D,IAAK,cACL,QACI,OAAOA,IAGJoC,EA7CM,SAACC,EAAed,GACjC,GAA6B,kBAAlBc,EACP,MAAO,CACHtC,KAAM,UACNC,KAAMmC,EAAUE,EAAed,IAGvC,IAAMxB,EAAOsC,EAAcC,OAAO,GAClC,MAAa,MAATvC,EACO,CACHA,KAAM,UACNC,KAAMsB,EAAmBe,EAAcE,UAAU,GAAIhB,IAG1C5B,EAAqBI,GAIjCsC,EAAcxF,OAAS,EACxB,CACEkD,KAAMJ,EAAqBI,GAC3BC,KAAMqC,EAAcE,UAAU,IAEhC,CACExC,KAAMJ,EAAqBI,IARxBD,GCnBf,0KAEA,IAAM0C,EAAYC,OAAOC,aAAa,IAChCC,EAAgB,SAACC,EAASrC,GAE5B,IAAM1D,EAAS+F,EAAQ/F,OACjBgG,EAAiB,IAAIzF,MAAMP,GAC7BiG,EAAQ,EACZF,EAAQ/C,SAAQ,SAACkD,EAAQ/F,GAErB+D,EAAagC,GAAQ,GAAO,SAAAV,GACxBQ,EAAe7F,GAAKqF,IACdS,IAAUjG,GACZ0D,EAASsC,EAAeG,KAAKR,WAKvCS,EAAgB,SAACC,EAAgB3B,GAGnC,IAFA,IAAMsB,EAAiBK,EAAerC,MAAM2B,GACtCI,EAAU,GACP5F,EAAI,EAAGA,EAAI6F,EAAehG,OAAQG,IAAK,CAC5C,IAAMmG,EAAgBf,EAAaS,EAAe7F,GAAIuE,GAEtD,GADAqB,EAAQvG,KAAK8G,GACc,UAAvBA,EAAcpD,KACd,MAGR,OAAO6C,GAEEQ,EAAW,G,2GCfT,SAAS,EAAWC,EAAQlG,EAAMmG,GAc/C,OAVE,EAjBJ,WACE,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAK9I,UAAUsF,SAASzE,KAAK6H,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOC,GACP,OAAO,GAKLC,GACWN,QAAQC,UAER,SAAoBH,EAAQlG,EAAMmG,GAC7C,IAAIQ,EAAI,CAAC,MACTA,EAAEzH,KAAKG,MAAMsH,EAAG3G,GAChB,IACI4G,EAAW,IADGtE,SAASjB,KAAKhC,MAAM6G,EAAQS,IAG9C,OADIR,GAAO,OAAAhJ,EAAA,GAAeyJ,EAAUT,EAAMzI,WACnCkJ,IAIOvH,MAAM,KAAMC,WCzBjB,SAAS,EAAiB6G,GACvC,IAAIU,EAAwB,oBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BA,EAAmB,SAA0BZ,GAC3C,GAAc,OAAVA,ICRkCpH,EDQEoH,GCPsB,IAAzD7D,SAASU,SAASzE,KAAKQ,GAAIiI,QAAQ,kBDOQ,OAAOb,ECR5C,IAA2BpH,EDUtC,GAAqB,oBAAVoH,EACT,MAAM,IAAI1I,UAAU,sDAGtB,GAAsB,qBAAXoJ,EAAwB,CACjC,GAAIA,EAAOI,IAAId,GAAQ,OAAOU,EAAOK,IAAIf,GAEzCU,EAAOM,IAAIhB,EAAOiB,GAGpB,SAASA,IACP,OAAO,EAAUjB,EAAO7G,UAAW,OAAAlC,EAAA,GAAe4B,MAAMpB,aAW1D,OARAwJ,EAAQ1J,UAAYR,OAAOS,OAAOwI,EAAMzI,UAAW,CACjDE,YAAa,CACXC,MAAOuJ,EACPC,YAAY,EACZvJ,UAAU,EACVC,cAAc,KAGX,OAAAZ,EAAA,GAAeiK,EAASjB,KAGTA,G,qEEhCpBmB,E,YACF,WAAYC,EAAQC,EAAaC,GAAS,kCACtC,4CAAMF,KACDC,YAAcA,EACnB,EAAKC,QAAUA,EACf,EAAK7E,KAAO,iBAJ0B,E,6BADjB8E,QAQhBC,EAAb,YAOI,WAAYzG,GAAM,kCACd,+CACKpD,UAAW,EAChBmD,YAAsB,eAAMC,GAC5B,EAAKA,KAAOA,EACZ,EAAK0G,MAAQ1G,EAAK0G,MAClB,EAAKC,WAAa,GAClB,EAAKC,OAAS5G,EAAK4G,OAPL,EAPtB,qEAyBYP,EAAQC,EAAaC,GAEzB,OADA,oEAAmB,QAAS,IAAIH,EAAeC,EAAQC,EAAaC,IAC7DzI,OA3Bf,6BAuCQ,MAJI,WAAaA,KAAK6I,YAAc,KAAO7I,KAAK6I,aAC5C7I,KAAK6I,WAAa,UAClB7I,KAAK+I,UAEF/I,OAvCf,8BAmDQ,MAJI,YAAcA,KAAK6I,YAAc,SAAW7I,KAAK6I,aACjD7I,KAAKgJ,UACLhJ,KAAKiJ,WAEFjJ,OAnDf,2BA2DSyG,GACG,SAAWzG,KAAK6I,YAChB7I,KAAKkJ,MAAMzC,KA7DvB,+BAyEQzG,KAAK6I,WAAa,OAClB7I,KAAKlB,UAAW,EAChB,oEAAmB,UA3E3B,6BAmFW+E,GACH,IAAM+C,EAASX,YAAapC,EAAM7D,KAAK8I,OAAO1D,YAC9CpF,KAAKmJ,SAASvC,KArFtB,+BA4FaA,GACL,oEAAmB,SAAUA,KA7FrC,8BAoGYwC,GACJpJ,KAAK6I,WAAa,SAClB,oEAAmB,QAASO,OAtGpC,GAA+B3J,M,iCCXhB,SAAS4J,EAAgBpL,EAAG2H,GAMzC,OALAyD,EAAkBnL,OAAOC,gBAAkB,SAAyBF,EAAG2H,GAErE,OADA3H,EAAEI,UAAYuH,EACP3H,IAGcA,EAAG2H,GAN5B,mC,iCCQO,SAAS0D,EAAOrK,GACnB,IAAIyD,EAAM,GACV,IAAK,IAAI7B,KAAK5B,EACNA,EAAI2C,eAAef,KACf6B,EAAIhC,SACJgC,GAAO,KACXA,GAAO6G,mBAAmB1I,GAAK,IAAM0I,mBAAmBtK,EAAI4B,KAGpE,OAAO6B,EAQJ,SAASqD,EAAOyD,GAGnB,IAFA,IAAIC,EAAM,GACNC,EAAQF,EAAG9E,MAAM,KACZ7D,EAAI,EAAG+B,EAAI8G,EAAMhJ,OAAQG,EAAI+B,EAAG/B,IAAK,CAC1C,IAAI8I,EAAOD,EAAM7I,GAAG6D,MAAM,KAC1B+E,EAAIG,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,IAE/D,OAAOF,EAhCX,qE,8CCCe,SAAS,EAAKI,EAAQC,EAAUC,GAiB7C,OAfE,EADqB,qBAAZ3C,SAA2BA,QAAQc,IACrCd,QAAQc,IAER,SAAc2B,EAAQC,EAAUC,GACrC,IAAIC,ECLK,SAAwBC,EAAQH,GAC7C,MAAQ5L,OAAOQ,UAAUkD,eAAerC,KAAK0K,EAAQH,IAEpC,QADfG,EAAS,OAAA7L,EAAA,GAAe6L,MAI1B,OAAOA,EDDQ,CAAcJ,EAAQC,GACjC,GAAKE,EAAL,CACA,IAAIE,EAAOhM,OAAOiM,yBAAyBH,EAAMF,GAEjD,OAAII,EAAKhC,IACAgC,EAAKhC,IAAI3I,KAAKwK,GAGhBG,EAAKrL,SAIJgL,EAAQC,EAAUC,GAAYF,GAlB5C,mC,iCEAA,kCAEA,IACqBO,EADfC,EAAW,mEAAmE3F,MAAM,IAAKhE,EAAS,GAAI4J,EAAM,GAC9GC,EAAO,EAAG1J,EAAI,EAQX,SAASyI,EAAOkB,GACnB,IAAIC,EAAU,GACd,GACIA,EAAUJ,EAASG,EAAM9J,GAAU+J,EACnCD,EAAMzH,KAAK2H,MAAMF,EAAM9J,SAClB8J,EAAM,GACf,OAAOC,EAsBJ,SAASE,IACZ,IAAMC,EAAMtB,GAAQ,IAAI9B,MACxB,OAAIoD,IAAQR,GACDG,EAAO,EAAGH,EAAOQ,GACrBA,EAAM,IAAMtB,EAAOiB,KAK9B,KAAO1J,EAAIH,EAAQG,IACfyJ,EAAID,EAASxJ,IAAMA,G,iTChDnBhC,GAAQ,EACZ,IACIA,EAAkC,qBAAnBgM,gBACX,oBAAqB,IAAIA,eAEjC,MAAOC,IAIA,IAAMC,EAAUlM,E,SCPhB,SAASmM,EAAI9I,GAChB,IAAM+I,EAAU/I,EAAK+I,QAErB,IACI,GAAI,qBAAuBJ,kBAAoBI,GAAWF,GACtD,OAAO,IAAIF,eAGnB,MAAOpD,IACP,IAAKwD,EACD,IACI,OAAO,IAAI3I,IAAW,CAAC,UAAU4I,OAAO,UAAUrE,KAAK,OAAM,qBAEjE,MAAOY,K,sBCRf,SAAS0D,KACT,IAAMC,EAIK,MAHK,IAAIP,EAAe,CAC3BI,SAAS,IAEMI,aAEVC,EAAb,YAOI,WAAYpJ,GAAM,MAGd,GAHc,qBACd,4CAAMA,KACDqJ,SAAU,EACS,qBAAbC,SAA0B,CACjC,IAAMC,EAAQ,WAAaD,SAASvE,SAChCyE,EAAOF,SAASE,KAEfA,IACDA,EAAOD,EAAQ,MAAQ,MAE3B,EAAKE,GACoB,qBAAbH,UACJtJ,EAAK0J,WAAaJ,SAASI,UAC3BF,IAASxJ,EAAKwJ,KACtB,EAAKG,GAAK3J,EAAK4J,SAAWL,EAK9B,IAAMM,EAAc7J,GAAQA,EAAK6J,YAnBnB,OAoBd,EAAKlH,eAAiBuG,IAAYW,EApBpB,EAPtB,sEA0CQ/L,KAAKgM,SA1Cb,4BAkDUC,GAAS,WACXjM,KAAK6I,WAAa,UAClB,IAAMqD,EAAQ,WACV,EAAKrD,WAAa,SAClBoD,KAEJ,GAAIjM,KAAKuL,UAAYvL,KAAKlB,SAAU,CAChC,IAAIqN,EAAQ,EACRnM,KAAKuL,UACLY,IACAnM,KAAKG,KAAK,gBAAgB,aACpBgM,GAASD,QAGdlM,KAAKlB,WACNqN,IACAnM,KAAKG,KAAK,SAAS,aACbgM,GAASD,aAKnBA,MAxEZ,6BAiFQlM,KAAKuL,SAAU,EACfvL,KAAKoM,SACLpM,KAAKoB,aAAa,UAnF1B,6BA0FWyC,GAAM,WAeTiD,YAAcjD,EAAM7D,KAAK8I,OAAO1D,YAAY1B,SAd3B,SAAAkD,GAMb,GAJI,YAAc,EAAKiC,YAA8B,SAAhBjC,EAAOhD,MACxC,EAAKyI,SAGL,UAAYzF,EAAOhD,KAEnB,OADA,EAAKqF,QAAQ,CAAET,YAAa,oCACrB,EAGX,EAAKW,SAASvC,MAKd,WAAa5G,KAAK6I,aAElB7I,KAAKuL,SAAU,EACfvL,KAAKoB,aAAa,gBACd,SAAWpB,KAAK6I,YAChB7I,KAAKgM,UAhHrB,gCA2Hc,WACAM,EAAQ,WACV,EAAKpD,MAAM,CAAC,CAAEtF,KAAM,YAEpB,SAAW5D,KAAK6I,WAChByD,IAKAtM,KAAKG,KAAK,OAAQmM,KArI9B,4BA+IU7F,GAAS,WACXzG,KAAKlB,UAAW,EAChB0H,YAAcC,GAAS,SAAA5C,GACnB,EAAK0I,QAAQ1I,GAAM,WACf,EAAK/E,UAAW,EAChB,EAAKsC,aAAa,iBApJlC,4BA8JQ,IAAIwH,EAAQ5I,KAAK4I,OAAS,GACpB4D,EAASxM,KAAKkC,KAAK4J,OAAS,QAAU,OACxCJ,EAAO,IAEP,IAAU1L,KAAKkC,KAAKuK,oBACpB7D,EAAM5I,KAAKkC,KAAKwK,gBAAkB/B,eAEjC3K,KAAK6E,gBAAmB+D,EAAM+D,MAC/B/D,EAAMgE,IAAM,GAGZ5M,KAAKkC,KAAKwJ,OACR,UAAYc,GAAqC,MAA3BK,OAAO7M,KAAKkC,KAAKwJ,OACpC,SAAWc,GAAqC,KAA3BK,OAAO7M,KAAKkC,KAAKwJ,SAC3CA,EAAO,IAAM1L,KAAKkC,KAAKwJ,MAE3B,IAAMoB,EAAexD,YAAOV,GAE5B,OAAQ4D,EACJ,QAF8C,IAArCxM,KAAKkC,KAAK0J,SAAS5D,QAAQ,KAG5B,IAAMhI,KAAKkC,KAAK0J,SAAW,IAAM5L,KAAKkC,KAAK0J,UACnDF,EACA1L,KAAKkC,KAAK6K,MACTD,EAAapM,OAAS,IAAMoM,EAAe,MArLxD,gCA6LuB,IAAX5K,EAAW,uDAAJ,GAEX,OADAhE,OAAO8O,OAAO9K,EAAM,CAAEyJ,GAAI3L,KAAK2L,GAAIE,GAAI7L,KAAK6L,IAAM7L,KAAKkC,MAChD,IAAI+K,EAAQjN,KAAKkN,MAAOhL,KA/LvC,8BAwMY2B,EAAM9D,GAAI,WACRoN,EAAMnN,KAAKoN,QAAQ,CACrBC,OAAQ,OACRxJ,KAAMA,IAEVsJ,EAAIvN,GAAG,UAAWG,GAClBoN,EAAIvN,GAAG,SAAS,SAAC0N,EAAW7E,GACxB,EAAK8E,QAAQ,iBAAkBD,EAAW7E,QA/MtD,+BAuNa,WACC0E,EAAMnN,KAAKoN,UACjBD,EAAIvN,GAAG,OAAQI,KAAKwN,OAAOnL,KAAKrC,OAChCmN,EAAIvN,GAAG,SAAS,SAAC0N,EAAW7E,GACxB,EAAK8E,QAAQ,iBAAkBD,EAAW7E,MAE9CzI,KAAKyN,QAAUN,IA7NvB,2BAiCQ,MAAO,cAjCf,GAA6BxE,KAgOhBsE,EAAb,YAOI,WAAYC,EAAKhL,GAAM,iCACnB,8CACAD,YAAsB,eAAMC,GAC5B,EAAKA,KAAOA,EACZ,EAAKmL,OAASnL,EAAKmL,QAAU,MAC7B,EAAKH,IAAMA,EACX,EAAKQ,OAAQ,IAAUxL,EAAKwL,MAC5B,EAAK7J,UAAOkE,IAAc7F,EAAK2B,KAAO3B,EAAK2B,KAAO,KAClD,EAAKlF,SARc,EAP3B,sEAsBa,WACCuD,EAAOX,YAAKvB,KAAKkC,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAK+I,UAAYjL,KAAKkC,KAAKyJ,GAC3BzJ,EAAKyL,UAAY3N,KAAKkC,KAAK2J,GAC3B,IAAM+B,EAAO5N,KAAK4N,IAAM,IAAI/C,EAAe3I,GAC3C,IACI0L,EAAIC,KAAK7N,KAAKqN,OAAQrN,KAAKkN,IAAKlN,KAAK0N,OACrC,IACI,GAAI1N,KAAKkC,KAAK4L,aAEV,IAAK,IAAIjN,KADT+M,EAAIG,uBAAyBH,EAAIG,uBAAsB,GACzC/N,KAAKkC,KAAK4L,aAChB9N,KAAKkC,KAAK4L,aAAalM,eAAef,IACtC+M,EAAII,iBAAiBnN,EAAGb,KAAKkC,KAAK4L,aAAajN,IAK/D,MAAO4G,IACP,GAAI,SAAWzH,KAAKqN,OAChB,IACIO,EAAII,iBAAiB,eAAgB,4BAEzC,MAAOvG,IAEX,IACImG,EAAII,iBAAiB,SAAU,OAEnC,MAAOvG,IAEH,oBAAqBmG,IACrBA,EAAIK,gBAAkBjO,KAAKkC,KAAK+L,iBAEhCjO,KAAKkC,KAAKgM,iBACVN,EAAIO,QAAUnO,KAAKkC,KAAKgM,gBAE5BN,EAAIQ,mBAAqB,WACjB,IAAMR,EAAI/E,aAEV,MAAQ+E,EAAIS,QAAU,OAAST,EAAIS,OACnC,EAAKC,SAKL,EAAKlM,cAAa,WACd,EAAKmL,QAA8B,kBAAfK,EAAIS,OAAsBT,EAAIS,OAAS,KAC5D,KAGXT,EAAIW,KAAKvO,KAAK6D,MAElB,MAAO4D,GAOH,YAHAzH,KAAKoC,cAAa,WACd,EAAKmL,QAAQ9F,KACd,GAGiB,qBAAb+G,WACPxO,KAAKyO,MAAQxB,EAAQyB,gBACrBzB,EAAQ0B,SAAS3O,KAAKyO,OAASzO,QApF3C,8BA4FY8K,GACJ9K,KAAKoB,aAAa,QAAS0J,EAAK9K,KAAK4N,KACrC5N,KAAK4O,SAAQ,KA9FrB,8BAqGYC,GACJ,GAAI,qBAAuB7O,KAAK4N,KAAO,OAAS5N,KAAK4N,IAArD,CAIA,GADA5N,KAAK4N,IAAIQ,mBAAqBjD,EAC1B0D,EACA,IACI7O,KAAK4N,IAAIkB,QAEb,MAAOrH,IAEa,qBAAb+G,iBACAvB,EAAQ0B,SAAS3O,KAAKyO,OAEjCzO,KAAK4N,IAAM,QAnHnB,+BA2HQ,IAAM/J,EAAO7D,KAAK4N,IAAImB,aACT,OAATlL,IACA7D,KAAKoB,aAAa,OAAQyC,GAC1B7D,KAAKoB,aAAa,WAClBpB,KAAK4O,aA/HjB,8BAwIQ5O,KAAK4O,cAxIb,GAA6BnP,KAkJ7B,GAPAwN,EAAQyB,cAAgB,EACxBzB,EAAQ0B,SAAW,GAMK,qBAAbH,SAEP,GAA2B,oBAAhBQ,YAEPA,YAAY,WAAYC,QAEvB,GAAgC,oBAArBpP,iBAAiC,CAC7C,IAAMqP,EAAmB,eAAgB5M,IAAa,WAAa,SACnEzC,iBAAiBqP,EAAkBD,GAAe,GAG1D,SAASA,IACL,IAAK,IAAIpO,KAAKoM,EAAQ0B,SACd1B,EAAQ0B,SAAS/M,eAAef,IAChCoM,EAAQ0B,SAAS9N,GAAGiO,Q,IC7YnBK,EAAa,CACtBC,U,OAAWC,EACX9D,QAASD,GCGPgE,EAAK,0OACLC,EAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,EAAM9M,GAClB,IAAM+M,EAAM/M,EAAKgN,EAAIhN,EAAIsF,QAAQ,KAAMP,EAAI/E,EAAIsF,QAAQ,MAC7C,GAAN0H,IAAiB,GAANjI,IACX/E,EAAMA,EAAI0D,UAAU,EAAGsJ,GAAKhN,EAAI0D,UAAUsJ,EAAGjI,GAAGkI,QAAQ,KAAM,KAAOjN,EAAI0D,UAAUqB,EAAG/E,EAAIhC,SAG9F,IADA,IAAIkP,EAAIN,EAAGO,KAAKnN,GAAO,IAAKwK,EAAM,GAAIrM,EAAI,GACnCA,KACHqM,EAAIqC,EAAM1O,IAAM+O,EAAE/O,IAAM,GAU5B,OARU,GAAN6O,IAAiB,GAANjI,IACXyF,EAAI4C,OAASL,EACbvC,EAAI6C,KAAO7C,EAAI6C,KAAK3J,UAAU,EAAG8G,EAAI6C,KAAKrP,OAAS,GAAGiP,QAAQ,KAAM,KACpEzC,EAAI8C,UAAY9C,EAAI8C,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9EzC,EAAI+C,SAAU,GAElB/C,EAAIgD,UAIR,SAAmBjR,EAAK8N,GACpB,IAAyBoD,EAAQpD,EAAK4C,QAAzB,WAAuC,KAAKjL,MAAM,KACtC,KAArBqI,EAAKqD,OAAO,EAAG,IAA6B,IAAhBrD,EAAKrM,QACjCyP,EAAMrP,OAAO,EAAG,GAEmB,KAAnCiM,EAAKqD,OAAOrD,EAAKrM,OAAS,EAAG,IAC7ByP,EAAMrP,OAAOqP,EAAMzP,OAAS,EAAG,GAEnC,OAAOyP,EAZSD,CAAUhD,EAAKA,EAAG,MAClCA,EAAImD,SAaR,SAAkBnD,EAAKtE,GACnB,IAAM/E,EAAO,GAMb,OALA+E,EAAM+G,QAAQ,6BAA6B,SAAUW,EAAIC,EAAIC,GACrDD,IACA1M,EAAK0M,GAAMC,MAGZ3M,EApBQwM,CAASnD,EAAKA,EAAG,OACzBA,ECtBJ,IAAMuD,EAAb,YAQI,WAAYvD,GAAgB,MAAXhL,EAAW,uDAAJ,GAAI,2BACxB,8CACIgL,GAAO,kBAAoBA,IAC3BhL,EAAOgL,EACPA,EAAM,MAENA,GACAA,EAAMsC,EAAMtC,GACZhL,EAAK0J,SAAWsB,EAAI6C,KACpB7N,EAAK4J,OAA0B,UAAjBoB,EAAIjG,UAAyC,QAAjBiG,EAAIjG,SAC9C/E,EAAKwJ,KAAOwB,EAAIxB,KACZwB,EAAItE,QACJ1G,EAAK0G,MAAQsE,EAAItE,QAEhB1G,EAAK6N,OACV7N,EAAK0J,SAAW4D,EAAMtN,EAAK6N,MAAMA,MAErC9N,YAAsB,eAAMC,GAC5B,EAAK4J,OACD,MAAQ5J,EAAK4J,OACP5J,EAAK4J,OACe,qBAAbN,UAA4B,WAAaA,SAASvE,SAC/D/E,EAAK0J,WAAa1J,EAAKwJ,OAEvBxJ,EAAKwJ,KAAO,EAAKI,OAAS,MAAQ,MAEtC,EAAKF,SACD1J,EAAK0J,WACoB,qBAAbJ,SAA2BA,SAASI,SAAW,aAC/D,EAAKF,KACDxJ,EAAKwJ,OACoB,qBAAbF,UAA4BA,SAASE,KACvCF,SAASE,KACT,EAAKI,OACD,MACA,MAClB,EAAKqD,WAAajN,EAAKiN,YAAc,CAAC,UAAW,aACjD,EAAKtG,WAAa,GAClB,EAAK6H,YAAc,GACnB,EAAKC,cAAgB,EACrB,EAAKzO,KAAOhE,OAAO8O,OAAO,CACtBD,KAAM,aACN6D,OAAO,EACP3C,iBAAiB,EACjB4C,SAAS,EACTnE,eAAgB,IAChBoE,iBAAiB,EACjBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEfC,iBAAkB,GAClBC,qBAAqB,GACtBjP,GACH,EAAKA,KAAK6K,KAAO,EAAK7K,KAAK6K,KAAK4C,QAAQ,MAAO,IAAM,IACtB,kBAApB,EAAKzN,KAAK0G,QACjB,EAAK1G,KAAK0G,MAAQ7C,YAAO,EAAK7D,KAAK0G,QAGvC,EAAKwI,GAAK,KACV,EAAKC,SAAW,KAChB,EAAKC,aAAe,KACpB,EAAKC,YAAc,KAEnB,EAAKC,iBAAmB,KACQ,oBAArB3R,mBACH,EAAKqC,KAAKiP,qBAIVtR,iBAAiB,gBAAgB,WACzB,EAAK4R,YAEL,EAAKA,UAAUjR,qBACf,EAAKiR,UAAUnF,YAEpB,GAEe,cAAlB,EAAKV,WACL,EAAK8F,qBAAuB,WACxB,EAAKzI,QAAQ,kBAAmB,CAC5BT,YAAa,6BAGrB3I,iBAAiB,UAAW,EAAK6R,sBAAsB,KAG/D,EAAK7D,OAvFmB,EARhC,6EAwGoB8D,GACZ,IAAM/I,EAAQ1K,OAAO8O,OAAO,GAAIhN,KAAKkC,KAAK0G,OAE1CA,EAAMgJ,IAAM3K,IAEZ2B,EAAM6I,UAAYE,EAEd3R,KAAKoR,KACLxI,EAAM+D,IAAM3M,KAAKoR,IACrB,IAAMlP,EAAOhE,OAAO8O,OAAO,GAAIhN,KAAKkC,KAAKgP,iBAAiBS,GAAO3R,KAAKkC,KAAM,CACxE0G,QACAE,OAAQ9I,KACR4L,SAAU5L,KAAK4L,SACfE,OAAQ9L,KAAK8L,OACbJ,KAAM1L,KAAK0L,OAEf,OAAO,IAAIyD,EAAWwC,GAAMzP,KAxHpC,6BA+HW,IACCuP,EADD,OAEH,GAAIzR,KAAKkC,KAAK4O,iBACVL,EAAOoB,wBACmC,IAA1C7R,KAAKmP,WAAWnH,QAAQ,aACxByJ,EAAY,gBAEX,IAAI,IAAMzR,KAAKmP,WAAWzO,OAK3B,YAHAV,KAAKoC,cAAa,WACd,EAAKhB,aAAa,QAAS,6BAC5B,GAIHqQ,EAAYzR,KAAKmP,WAAW,GAEhCnP,KAAK6I,WAAa,UAElB,IACI4I,EAAYzR,KAAK8R,gBAAgBL,GAErC,MAAOhK,GAGH,OAFAzH,KAAKmP,WAAW4C,aAChB/R,KAAK6N,OAGT4D,EAAU5D,OACV7N,KAAKgS,aAAaP,KA3J1B,mCAkKiBA,GAAW,WAChBzR,KAAKyR,WACLzR,KAAKyR,UAAUjR,qBAGnBR,KAAKyR,UAAYA,EAEjBA,EACK7R,GAAG,QAASI,KAAKiS,QAAQ5P,KAAKrC,OAC9BJ,GAAG,SAAUI,KAAKmJ,SAAS9G,KAAKrC,OAChCJ,GAAG,QAASI,KAAKuN,QAAQlL,KAAKrC,OAC9BJ,GAAG,SAAS,SAAA2I,GAAM,OAAI,EAAKU,QAAQ,kBAAmBV,QA7KnE,4BAqLUoJ,GAAM,WACJF,EAAYzR,KAAK8R,gBAAgBH,GACjCO,GAAS,EACbzB,EAAOoB,uBAAwB,EAC/B,IAAMM,EAAkB,WAChBD,IAEJT,EAAUlD,KAAK,CAAC,CAAE3K,KAAM,OAAQC,KAAM,WACtC4N,EAAUtR,KAAK,UAAU,SAAAiS,GACrB,IAAIF,EAEJ,GAAI,SAAWE,EAAIxO,MAAQ,UAAYwO,EAAIvO,KAAM,CAG7C,GAFA,EAAKwO,WAAY,EACjB,EAAKjR,aAAa,YAAaqQ,IAC1BA,EACD,OACJhB,EAAOoB,sBAAwB,cAAgBJ,EAAUE,KACzD,EAAKF,UAAUvF,OAAM,WACbgG,GAEA,WAAa,EAAKrJ,aAEtB+F,IACA,EAAKoD,aAAaP,GAClBA,EAAUlD,KAAK,CAAC,CAAE3K,KAAM,aACxB,EAAKxC,aAAa,UAAWqQ,GAC7BA,EAAY,KACZ,EAAKY,WAAY,EACjB,EAAKC,gBAGR,CACD,IAAMxH,EAAM,IAAIpC,MAAM,eAEtBoC,EAAI2G,UAAYA,EAAUE,KAC1B,EAAKvQ,aAAa,eAAgB0J,SAI9C,SAASyH,IACDL,IAGJA,GAAS,EACTtD,IACA6C,EAAUnF,QACVmF,EAAY,MAGhB,IAAMe,EAAU,SAAA1H,GACZ,IAAM2H,EAAQ,IAAI/J,MAAM,gBAAkBoC,GAE1C2H,EAAMhB,UAAYA,EAAUE,KAC5BY,IACA,EAAKnR,aAAa,eAAgBqR,IAEtC,SAASC,IACLF,EAAQ,oBAGZ,SAASG,IACLH,EAAQ,iBAGZ,SAASI,EAAUC,GACXpB,GAAaoB,EAAGlB,OAASF,EAAUE,MACnCY,IAIR,IAAM3D,EAAU,WACZ6C,EAAUlR,eAAe,OAAQ4R,GACjCV,EAAUlR,eAAe,QAASiS,GAClCf,EAAUlR,eAAe,QAASmS,GAClC,EAAKtS,IAAI,QAASuS,GAClB,EAAKvS,IAAI,YAAawS,IAE1BnB,EAAUtR,KAAK,OAAQgS,GACvBV,EAAUtR,KAAK,QAASqS,GACxBf,EAAUtR,KAAK,QAASuS,GACxB1S,KAAKG,KAAK,QAASwS,GACnB3S,KAAKG,KAAK,YAAayS,GACvBnB,EAAU5D,SAvQlB,+BAqRQ,GANA7N,KAAK6I,WAAa,OAClB4H,EAAOoB,sBAAwB,cAAgB7R,KAAKyR,UAAUE,KAC9D3R,KAAKoB,aAAa,QAClBpB,KAAKsS,QAGD,SAAWtS,KAAK6I,YAChB7I,KAAKkC,KAAK2O,SACV7Q,KAAKyR,UAAUvF,MAGf,IAFA,IAAIrL,EAAI,EACF+B,EAAI5C,KAAKqR,SAAS3Q,OACjBG,EAAI+B,EAAG/B,IACVb,KAAK8S,MAAM9S,KAAKqR,SAASxQ,MA3RzC,+BAoSa+F,GACL,GAAI,YAAc5G,KAAK6I,YACnB,SAAW7I,KAAK6I,YAChB,YAAc7I,KAAK6I,WAInB,OAHA7I,KAAKoB,aAAa,SAAUwF,GAE5B5G,KAAKoB,aAAa,aACVwF,EAAOhD,MACX,IAAK,OACD5D,KAAK+S,YAAYC,KAAKxD,MAAM5I,EAAO/C,OACnC,MACJ,IAAK,OACD7D,KAAKiT,mBACLjT,KAAKkT,WAAW,QAChBlT,KAAKoB,aAAa,QAClBpB,KAAKoB,aAAa,QAClB,MACJ,IAAK,QACD,IAAM0J,EAAM,IAAIpC,MAAM,gBAEtBoC,EAAIqI,KAAOvM,EAAO/C,KAClB7D,KAAKuN,QAAQzC,GACb,MACJ,IAAK,UACD9K,KAAKoB,aAAa,OAAQwF,EAAO/C,MACjC7D,KAAKoB,aAAa,UAAWwF,EAAO/C,SA7TxD,kCA0UgBA,GACR7D,KAAKoB,aAAa,YAAayC,GAC/B7D,KAAKoR,GAAKvN,EAAK8I,IACf3M,KAAKyR,UAAU7I,MAAM+D,IAAM9I,EAAK8I,IAChC3M,KAAKqR,SAAWrR,KAAKoT,eAAevP,EAAKwN,UACzCrR,KAAKsR,aAAezN,EAAKyN,aACzBtR,KAAKuR,YAAc1N,EAAK0N,YACxBvR,KAAKqT,WAAaxP,EAAKwP,WACvBrT,KAAKqM,SAED,WAAarM,KAAK6I,YAEtB7I,KAAKiT,qBAtVb,yCA6VuB,WACfjT,KAAKuC,eAAevC,KAAKwR,kBACzBxR,KAAKwR,iBAAmBxR,KAAKoC,cAAa,WACtC,EAAK6G,QAAQ,kBACdjJ,KAAKsR,aAAetR,KAAKuR,aACxBvR,KAAKkC,KAAKoR,WACVtT,KAAKwR,iBAAiB+B,UAnWlC,gCA4WQvT,KAAK0Q,YAAY5P,OAAO,EAAGd,KAAK2Q,eAIhC3Q,KAAK2Q,cAAgB,EACjB,IAAM3Q,KAAK0Q,YAAYhQ,OACvBV,KAAKoB,aAAa,SAGlBpB,KAAKsS,UArXjB,8BA8XQ,GAAI,WAAatS,KAAK6I,YAClB7I,KAAKyR,UAAU3S,WACdkB,KAAKqS,WACNrS,KAAK0Q,YAAYhQ,OAAQ,CACzB,IAAM+F,EAAUzG,KAAKwT,qBACrBxT,KAAKyR,UAAUlD,KAAK9H,GAGpBzG,KAAK2Q,cAAgBlK,EAAQ/F,OAC7BV,KAAKoB,aAAa,YAvY9B,2CAoZQ,KAH+BpB,KAAKqT,YACR,YAAxBrT,KAAKyR,UAAUE,MACf3R,KAAK0Q,YAAYhQ,OAAS,GAE1B,OAAOV,KAAK0Q,YAGhB,IADA,IAAI+C,EAAc,EACT5S,EAAI,EAAGA,EAAIb,KAAK0Q,YAAYhQ,OAAQG,IAAK,CAC9C,IAAMgD,EAAO7D,KAAK0Q,YAAY7P,GAAGgD,KAIjC,GAHIA,IACA4P,GAAehR,YAAWoB,IAE1BhD,EAAI,GAAK4S,EAAczT,KAAKqT,WAC5B,OAAOrT,KAAK0Q,YAAYvP,MAAM,EAAGN,GAErC4S,GAAe,EAEnB,OAAOzT,KAAK0Q,cAlapB,4BA6aU0B,EAAKsB,EAAS3T,GAEhB,OADAC,KAAKkT,WAAW,UAAWd,EAAKsB,EAAS3T,GAClCC,OA/af,2BAibSoS,EAAKsB,EAAS3T,GAEf,OADAC,KAAKkT,WAAW,UAAWd,EAAKsB,EAAS3T,GAClCC,OAnbf,iCA8be4D,EAAMC,EAAM6P,EAAS3T,GAS5B,GARI,oBAAsB8D,IACtB9D,EAAK8D,EACLA,OAAOkE,GAEP,oBAAsB2L,IACtB3T,EAAK2T,EACLA,EAAU,MAEV,YAAc1T,KAAK6I,YAAc,WAAa7I,KAAK6I,WAAvD,EAGA6K,EAAUA,GAAW,IACbC,UAAW,IAAUD,EAAQC,SACrC,IAAM/M,EAAS,CACXhD,KAAMA,EACNC,KAAMA,EACN6P,QAASA,GAEb1T,KAAKoB,aAAa,eAAgBwF,GAClC5G,KAAK0Q,YAAYxQ,KAAK0G,GAClB7G,GACAC,KAAKG,KAAK,QAASJ,GACvBC,KAAKsS,WArdb,8BA4dY,WACEhG,EAAQ,WACV,EAAKrD,QAAQ,gBACb,EAAKwI,UAAUnF,SAEbsH,EAAkB,SAAlBA,IACF,EAAKxT,IAAI,UAAWwT,GACpB,EAAKxT,IAAI,eAAgBwT,GACzBtH,KAEEuH,EAAiB,WAEnB,EAAK1T,KAAK,UAAWyT,GACrB,EAAKzT,KAAK,eAAgByT,IAqB9B,MAnBI,YAAc5T,KAAK6I,YAAc,SAAW7I,KAAK6I,aACjD7I,KAAK6I,WAAa,UACd7I,KAAK0Q,YAAYhQ,OACjBV,KAAKG,KAAK,SAAS,WACX,EAAKkS,UACLwB,IAGAvH,OAIHtM,KAAKqS,UACVwB,IAGAvH,KAGDtM,OA9ff,8BAqgBY8K,GACJ2F,EAAOoB,uBAAwB,EAC/B7R,KAAKoB,aAAa,QAAS0J,GAC3B9K,KAAKiJ,QAAQ,kBAAmB6B,KAxgBxC,8BA+gBYvC,EAAQC,GACR,YAAcxI,KAAK6I,YACnB,SAAW7I,KAAK6I,YAChB,YAAc7I,KAAK6I,aAEnB7I,KAAKuC,eAAevC,KAAKwR,kBAEzBxR,KAAKyR,UAAUjR,mBAAmB,SAElCR,KAAKyR,UAAUnF,QAEftM,KAAKyR,UAAUjR,qBACoB,oBAAxBC,qBACPA,oBAAoB,UAAWT,KAAK0R,sBAAsB,GAG9D1R,KAAK6I,WAAa,SAElB7I,KAAKoR,GAAK,KAEVpR,KAAKoB,aAAa,QAASmH,EAAQC,GAGnCxI,KAAK0Q,YAAc,GACnB1Q,KAAK2Q,cAAgB,KAviBjC,qCAijBmBU,GAIX,IAHA,IAAMyC,EAAmB,GACrBjT,EAAI,EACFkT,EAAI1C,EAAS3Q,OACZG,EAAIkT,EAAGlT,KACLb,KAAKmP,WAAWnH,QAAQqJ,EAASxQ,KAClCiT,EAAiB5T,KAAKmR,EAASxQ,IAEvC,OAAOiT,MAzjBf,GAA4BrU,KA4jB5BgR,EAAOxJ,SAAWA,IChkBMwJ,EAAOxJ,S,aCFzBhD,EAA+C,oBAAhBC,YAC/BY,EAAS,SAAC7F,GACZ,MAAqC,oBAAvBiF,YAAYY,OACpBZ,YAAYY,OAAO7F,GACnBA,EAAI8F,kBAAkBb,aAE1BF,EAAW9F,OAAOQ,UAAUsF,SAC5BF,EAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxBC,EAASzE,KAAKwE,MAChBiQ,EAAiC,oBAATC,MACT,qBAATA,MACoB,6BAAxBjQ,EAASzE,KAAK0U,MAMf,SAASC,EAASjV,GACrB,OAASgF,IAA0BhF,aAAeiF,aAAeY,EAAO7F,KACnE6E,GAAkB7E,aAAe8E,MACjCiQ,GAAkB/U,aAAegV,KCbnC,SAASE,EAAkBvN,GAC9B,IAAMwN,EAAU,GACVC,EAAazN,EAAO/C,KACpByQ,EAAO1N,EAGb,OAFA0N,EAAKzQ,KAIT,SAAS0Q,EAAmB1Q,EAAMuQ,GAC9B,IAAKvQ,EACD,OAAOA,EACX,GAAIqQ,EAASrQ,GAAO,CAChB,IAAM2Q,EAAc,CAAEC,cAAc,EAAMjK,IAAK4J,EAAQ1T,QAEvD,OADA0T,EAAQlU,KAAK2D,GACN2Q,EAEN,GAAIvT,MAAMyT,QAAQ7Q,GAAO,CAE1B,IADA,IAAM8Q,EAAU,IAAI1T,MAAM4C,EAAKnD,QACtBG,EAAI,EAAGA,EAAIgD,EAAKnD,OAAQG,IAC7B8T,EAAQ9T,GAAK0T,EAAmB1Q,EAAKhD,GAAIuT,GAE7C,OAAOO,EAEN,GAAoB,kBAAT9Q,KAAuBA,aAAgB2D,MAAO,CAC1D,IAAMmN,EAAU,GAChB,IAAK,IAAMjV,KAAOmE,EACV3F,OAAOQ,UAAUkD,eAAerC,KAAKsE,EAAMnE,KAC3CiV,EAAQjV,GAAO6U,EAAmB1Q,EAAKnE,GAAM0U,IAGrD,OAAOO,EAEX,OAAO9Q,EA5BK0Q,CAAmBF,EAAYD,GAC3CE,EAAKM,YAAcR,EAAQ1T,OACpB,CAAEkG,OAAQ0N,EAAMF,QAASA,GAoC7B,SAASS,EAAkBjO,EAAQwN,GAGtC,OAFAxN,EAAO/C,KAIX,SAASiR,EAAmBjR,EAAMuQ,GAC9B,IAAKvQ,EACD,OAAOA,EACX,GAAIA,GAAQA,EAAK4Q,aACb,OAAOL,EAAQvQ,EAAK2G,KAEnB,GAAIvJ,MAAMyT,QAAQ7Q,GACnB,IAAK,IAAIhD,EAAI,EAAGA,EAAIgD,EAAKnD,OAAQG,IAC7BgD,EAAKhD,GAAKiU,EAAmBjR,EAAKhD,GAAIuT,QAGzC,GAAoB,kBAATvQ,EACZ,IAAK,IAAMnE,KAAOmE,EACV3F,OAAOQ,UAAUkD,eAAerC,KAAKsE,EAAMnE,KAC3CmE,EAAKnE,GAAOoV,EAAmBjR,EAAKnE,GAAM0U,IAItD,OAAOvQ,EAtBOiR,CAAmBlO,EAAO/C,KAAMuQ,GAC9CxN,EAAOgO,iBAAc7M,EACdnB,EC7CJ,IACImO,EADE9N,EAAW,GAExB,SAAW8N,GACPA,EAAWA,EAAU,QAAc,GAAK,UACxCA,EAAWA,EAAU,WAAiB,GAAK,aAC3CA,EAAWA,EAAU,MAAY,GAAK,QACtCA,EAAWA,EAAU,IAAU,GAAK,MACpCA,EAAWA,EAAU,cAAoB,GAAK,gBAC9CA,EAAWA,EAAU,aAAmB,GAAK,eAC7CA,EAAWA,EAAU,WAAiB,GAAK,aAP/C,CAQGA,IAAeA,EAAa,KAIxB,IAAMC,EAAb,WAMI,WAAYC,GAAU,oBAClBjV,KAAKiV,SAAWA,EAPxB,mDAeWhW,GACH,OAAIA,EAAI2E,OAASmR,EAAWG,OAASjW,EAAI2E,OAASmR,EAAWI,MFf9D,SAASC,EAAUnW,EAAKoW,GAC3B,IAAKpW,GAAsB,kBAARA,EACf,OAAO,EAEX,GAAIgC,MAAMyT,QAAQzV,GAAM,CACpB,IAAK,IAAI4B,EAAI,EAAG+B,EAAI3D,EAAIyB,OAAQG,EAAI+B,EAAG/B,IACnC,GAAIuU,EAAUnW,EAAI4B,IACd,OAAO,EAGf,OAAO,EAEX,GAAIqT,EAASjV,GACT,OAAO,EAEX,GAAIA,EAAIoW,QACkB,oBAAfpW,EAAIoW,QACU,IAArB/U,UAAUI,OACV,OAAO0U,EAAUnW,EAAIoW,UAAU,GAEnC,IAAK,IAAM3V,KAAOT,EACd,GAAIf,OAAOQ,UAAUkD,eAAerC,KAAKN,EAAKS,IAAQ0V,EAAUnW,EAAIS,IAChE,OAAO,EAGf,OAAO,EETK0V,CAAUnW,GAQX,CAACe,KAAKsV,eAAerW,KAPpBA,EAAI2E,KACA3E,EAAI2E,OAASmR,EAAWG,MAClBH,EAAWQ,aACXR,EAAWS,WACdxV,KAAKyV,eAAexW,MAtB3C,qCA8BmBA,GAEX,IAAIyD,EAAM,GAAKzD,EAAI2E,KAmBnB,OAjBI3E,EAAI2E,OAASmR,EAAWQ,cACxBtW,EAAI2E,OAASmR,EAAWS,aACxB9S,GAAOzD,EAAI2V,YAAc,KAIzB3V,EAAIyW,KAAO,MAAQzW,EAAIyW,MACvBhT,GAAOzD,EAAIyW,IAAM,KAGjB,MAAQzW,EAAImS,KACZ1O,GAAOzD,EAAImS,IAGX,MAAQnS,EAAI4E,OACZnB,GAAOsQ,KAAK2C,UAAU1W,EAAI4E,KAAM7D,KAAKiV,WAElCvS,IAnDf,qCA0DmBzD,GACX,IAAM2W,EAAiBzB,EAAkBlV,GACnCqV,EAAOtU,KAAKsV,eAAeM,EAAehP,QAC1CwN,EAAUwB,EAAexB,QAE/B,OADAA,EAAQyB,QAAQvB,GACTF,MA/Df,KAuEa0B,EAAb,YAMI,WAAYC,GAAS,kCACjB,+CACKA,QAAUA,EAFE,EANzB,iEAeQ9W,GACA,IAAI2H,EACJ,GAAmB,kBAAR3H,GACP2H,EAAS5G,KAAKgW,aAAa/W,IAChB2E,OAASmR,EAAWQ,cAC3B3O,EAAOhD,OAASmR,EAAWS,YAE3BxV,KAAKiW,cAAgB,IAAIC,EAAoBtP,GAElB,IAAvBA,EAAOgO,aACP,oEAAmB,UAAWhO,IAKlC,oEAAmB,UAAWA,OAGjC,KAAIsN,EAASjV,KAAQA,EAAIqG,OAe1B,MAAM,IAAIoD,MAAM,iBAAmBzJ,GAbnC,IAAKe,KAAKiW,cACN,MAAM,IAAIvN,MAAM,qDAGhB9B,EAAS5G,KAAKiW,cAAcE,eAAelX,MAGvCe,KAAKiW,cAAgB,KACrB,oEAAmB,UAAWrP,OA3ClD,mCAyDiBlE,GACT,IAAI7B,EAAI,EAEF+E,EAAI,CACNhC,KAAMiJ,OAAOnK,EAAIyD,OAAO,KAE5B,QAA2B4B,IAAvBgN,EAAWnP,EAAEhC,MACb,MAAM,IAAI8E,MAAM,uBAAyB9C,EAAEhC,MAG/C,GAAIgC,EAAEhC,OAASmR,EAAWQ,cACtB3P,EAAEhC,OAASmR,EAAWS,WAAY,CAElC,IADA,IAAMY,EAAQvV,EAAI,EACS,MAApB6B,EAAIyD,SAAStF,IAAcA,GAAK6B,EAAIhC,SAC3C,IAAM2V,EAAM3T,EAAI0D,UAAUgQ,EAAOvV,GACjC,GAAIwV,GAAOxJ,OAAOwJ,IAA0B,MAAlB3T,EAAIyD,OAAOtF,GACjC,MAAM,IAAI6H,MAAM,uBAEpB9C,EAAEgP,YAAc/H,OAAOwJ,GAG3B,GAAI,MAAQ3T,EAAIyD,OAAOtF,EAAI,GAAI,CAE3B,IADA,IAAMuV,EAAQvV,EAAI,IACTA,GAAG,CAER,GAAI,MADM6B,EAAIyD,OAAOtF,GAEjB,MACJ,GAAIA,IAAM6B,EAAIhC,OACV,MAERkF,EAAE8P,IAAMhT,EAAI0D,UAAUgQ,EAAOvV,QAG7B+E,EAAE8P,IAAM,IAGZ,IAAMY,EAAO5T,EAAIyD,OAAOtF,EAAI,GAC5B,GAAI,KAAOyV,GAAQzJ,OAAOyJ,IAASA,EAAM,CAErC,IADA,IAAMF,EAAQvV,EAAI,IACTA,GAAG,CACR,IAAM8B,EAAID,EAAIyD,OAAOtF,GACrB,GAAI,MAAQ8B,GAAKkK,OAAOlK,IAAMA,EAAG,GAC3B9B,EACF,MAEJ,GAAIA,IAAM6B,EAAIhC,OACV,MAERkF,EAAEwL,GAAKvE,OAAOnK,EAAI0D,UAAUgQ,EAAOvV,EAAI,IAG3C,GAAI6B,EAAIyD,SAAStF,GAAI,CACjB,IAAM0V,EAAUvW,KAAKwW,SAAS9T,EAAI0N,OAAOvP,IACzC,IAAIiV,EAAQW,eAAe7Q,EAAEhC,KAAM2S,GAI/B,MAAM,IAAI7N,MAAM,mBAHhB9C,EAAE/B,KAAO0S,EAMjB,OAAO3Q,IArHf,+BAuHalD,GACL,IACI,OAAOsQ,KAAKxD,MAAM9M,EAAK1C,KAAK+V,SAEhC,MAAOtO,GACH,OAAO,KA5HnB,gCAmJYzH,KAAKiW,eACLjW,KAAKiW,cAAcS,4BApJ/B,sCA+H0B9S,EAAM2S,GACxB,OAAQ3S,GACJ,KAAKmR,EAAW4B,QACZ,MAA0B,kBAAZJ,EAClB,KAAKxB,EAAW6B,WACZ,YAAmB7O,IAAZwO,EACX,KAAKxB,EAAW8B,cACZ,MAA0B,kBAAZN,GAA2C,kBAAZA,EACjD,KAAKxB,EAAWG,MAChB,KAAKH,EAAWQ,aACZ,OAAOtU,MAAMyT,QAAQ6B,IAAYA,EAAQ7V,OAAS,EACtD,KAAKqU,EAAWI,IAChB,KAAKJ,EAAWS,WACZ,OAAOvU,MAAMyT,QAAQ6B,QA5IrC,GAA6B9W,KAgKvByW,E,WACF,WAAYtP,GAAQ,oBAChB5G,KAAK4G,OAASA,EACd5G,KAAKoU,QAAU,GACfpU,KAAK8W,UAAYlQ,E,2DAUNmQ,GAEX,GADA/W,KAAKoU,QAAQlU,KAAK6W,GACd/W,KAAKoU,QAAQ1T,SAAWV,KAAK8W,UAAUlC,YAAa,CAEpD,IAAMhO,EAASiO,EAAkB7U,KAAK8W,UAAW9W,KAAKoU,SAEtD,OADApU,KAAK0W,yBACE9P,EAEX,OAAO,O,+CAMP5G,KAAK8W,UAAY,KACjB9W,KAAKoU,QAAU,O,KC1RhB,SAASxU,EAAGX,EAAK+X,EAAIjX,GAExB,OADAd,EAAIW,GAAGoX,EAAIjX,GACJ,WACHd,EAAImB,IAAI4W,EAAIjX,ICIpB,IAAMkX,EAAkB/Y,OAAOgZ,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACbhX,eAAgB,IAEPkQ,EAAb,YAMI,WAAY+G,EAAI9B,EAAKxT,GAAM,kCACvB,+CACKuV,WAAY,EACjB,EAAKC,cAAgB,GACrB,EAAKC,WAAa,GAClB,EAAKC,IAAM,EACX,EAAKC,KAAO,GACZ,EAAKC,MAAQ,GACb,EAAKN,GAAKA,EACV,EAAK9B,IAAMA,EACPxT,GAAQA,EAAK6V,OACb,EAAKA,KAAO7V,EAAK6V,MAEjB,EAAKP,GAAGQ,cACR,EAAKnK,OAdc,EAN/B,yEAkCQ,IAAI7N,KAAKiY,KAAT,CAEA,IAAMT,EAAKxX,KAAKwX,GAChBxX,KAAKiY,KAAO,CACRrY,EAAG4X,EAAI,OAAQxX,KAAKkY,OAAO7V,KAAKrC,OAChCJ,EAAG4X,EAAI,SAAUxX,KAAKmY,SAAS9V,KAAKrC,OACpCJ,EAAG4X,EAAI,QAASxX,KAAKwS,QAAQnQ,KAAKrC,OAClCJ,EAAG4X,EAAI,QAASxX,KAAK2S,QAAQtQ,KAAKrC,WAzC9C,gCAwDQ,OAAIA,KAAKyX,UACEzX,MACXA,KAAKoY,YACApY,KAAKwX,GAAL,eACDxX,KAAKwX,GAAG3J,OACR,SAAW7N,KAAKwX,GAAGa,aACnBrY,KAAKkY,SACFlY,QA/Df,6BAqEQ,OAAOA,KAAKmX,YArEpB,6BA6EkB,2BAANnW,EAAM,yBAANA,EAAM,gBAGV,OAFAA,EAAK6U,QAAQ,WACb7V,KAAKe,KAAKV,MAAML,KAAMgB,GACfhB,OAhFf,2BAyFSgX,GACD,GAAIC,EAAgBrV,eAAeoV,GAC/B,MAAM,IAAItO,MAAM,IAAMsO,EAAK,8BAFjB,2BAANhW,EAAM,iCAANA,EAAM,kBAIdA,EAAK6U,QAAQmB,GACb,IAAMpQ,EAAS,CACXhD,KAAMmR,EAAWG,MACjBrR,KAAM7C,EAEV4F,QAAiB,IAGjB,GAFAA,EAAO8M,QAAQC,UAAmC,IAAxB3T,KAAK8X,MAAMnE,SAEjC,oBAAsB3S,EAAKA,EAAKN,OAAS,GAAI,CAC7C,IAAM0Q,EAAKpR,KAAK4X,MACVU,EAAMtX,EAAKuX,MACjBvY,KAAKwY,qBAAqBpH,EAAIkH,GAC9B1R,EAAOwK,GAAKA,EAEhB,IAAMqH,EAAsBzY,KAAKwX,GAAGkB,QAChC1Y,KAAKwX,GAAGkB,OAAOjH,WACfzR,KAAKwX,GAAGkB,OAAOjH,UAAU3S,SACvB6Z,EAAgB3Y,KAAK8X,MAAMc,YAAcH,IAAwBzY,KAAKyX,WAW5E,OAVIkB,IAEK3Y,KAAKyX,WACVzX,KAAK6Y,wBAAwBjS,GAC7B5G,KAAK4G,OAAOA,IAGZ5G,KAAK2X,WAAWzX,KAAK0G,IAEzB5G,KAAK8X,MAAQ,GACN9X,OAzHf,2CA8HyBoR,EAAIkH,GAAK,WACpBnK,EAAUnO,KAAK8X,MAAM3J,QAC3B,QAAgBpG,IAAZoG,EAAJ,CAKA,IAAM2K,EAAQ9Y,KAAKwX,GAAGpV,cAAa,kBACxB,EAAKyV,KAAKzG,GACjB,IAAK,IAAIvQ,EAAI,EAAGA,EAAI,EAAK8W,WAAWjX,OAAQG,IACpC,EAAK8W,WAAW9W,GAAGuQ,KAAOA,GAC1B,EAAKuG,WAAW7W,OAAOD,EAAG,GAGlCyX,EAAI/Y,KAAK,EAAM,IAAImJ,MAAM,8BAC1ByF,GACHnO,KAAK6X,KAAKzG,GAAM,WAEZ,EAAKoG,GAAGjV,eAAeuW,GAFE,2BAAT9X,EAAS,yBAATA,EAAS,gBAGzBsX,EAAIjY,MAAM,EAAV,CAAiB,MAAjB,OAA0BW,UAhB1BhB,KAAK6X,KAAKzG,GAAMkH,IAjI5B,6BA0JW1R,GACHA,EAAO8O,IAAM1V,KAAK0V,IAClB1V,KAAKwX,GAAGuB,QAAQnS,KA5JxB,+BAmKa,WACmB,mBAAb5G,KAAK+X,KACZ/X,KAAK+X,MAAK,SAAClU,GACP,EAAK+C,OAAO,CAAEhD,KAAMmR,EAAW4B,QAAS9S,YAI5C7D,KAAK4G,OAAO,CAAEhD,KAAMmR,EAAW4B,QAAS9S,KAAM7D,KAAK+X,SA1K/D,8BAmLYjN,GACC9K,KAAKyX,WACNzX,KAAKoB,aAAa,gBAAiB0J,KArL/C,8BA+LYvC,EAAQC,GACZxI,KAAKyX,WAAY,SACVzX,KAAKoR,GACZpR,KAAKoB,aAAa,aAAcmH,EAAQC,KAlMhD,+BA0Ma5B,GAEL,GADsBA,EAAO8O,MAAQ1V,KAAK0V,IAG1C,OAAQ9O,EAAOhD,MACX,KAAKmR,EAAW4B,QACZ,GAAI/P,EAAO/C,MAAQ+C,EAAO/C,KAAK8I,IAAK,CAChC,IAAMyE,EAAKxK,EAAO/C,KAAK8I,IACvB3M,KAAKgZ,UAAU5H,QAGfpR,KAAKoB,aAAa,gBAAiB,IAAIsH,MAAM,8LAEjD,MACJ,KAAKqM,EAAWG,MAChB,KAAKH,EAAWQ,aACZvV,KAAKiZ,QAAQrS,GACb,MACJ,KAAKmO,EAAWI,IAChB,KAAKJ,EAAWS,WACZxV,KAAKkZ,MAAMtS,GACX,MACJ,KAAKmO,EAAW6B,WACZ5W,KAAKmZ,eACL,MACJ,KAAKpE,EAAW8B,cACZ7W,KAAKoZ,UACL,IAAMtO,EAAM,IAAIpC,MAAM9B,EAAO/C,KAAKwV,SAElCvO,EAAIjH,KAAO+C,EAAO/C,KAAKA,KACvB7D,KAAKoB,aAAa,gBAAiB0J,MAxOnD,8BAkPYlE,GACJ,IAAM5F,EAAO4F,EAAO/C,MAAQ,GACxB,MAAQ+C,EAAOwK,IACfpQ,EAAKd,KAAKF,KAAKsY,IAAI1R,EAAOwK,KAE1BpR,KAAKyX,UACLzX,KAAKsZ,UAAUtY,GAGfhB,KAAK0X,cAAcxX,KAAKhC,OAAOgZ,OAAOlW,MA3PlD,gCA8PcA,GACN,GAAIhB,KAAKuZ,eAAiBvZ,KAAKuZ,cAAc7Y,OAAQ,CACjD,IAAMW,EAAYrB,KAAKuZ,cAAcpY,QADY,uBAEjD,YAAuBE,EAAvB,+CAAkC,SACrBhB,MAAML,KAAMgB,IAHwB,mFAMrD,kDAAWX,MAAML,KAAMgB,KArQ/B,0BA4QQoQ,GACA,IAAM9R,EAAOU,KACTwZ,GAAO,EACX,OAAO,WAEH,IAAIA,EAAJ,CAEAA,GAAO,EAJe,2BAANxY,EAAM,yBAANA,EAAM,gBAKtB1B,EAAKsH,OAAO,CACRhD,KAAMmR,EAAWI,IACjB/D,GAAIA,EACJvN,KAAM7C,QAvRtB,4BAiSU4F,GACF,IAAM0R,EAAMtY,KAAK6X,KAAKjR,EAAOwK,IACzB,oBAAsBkH,IACtBA,EAAIjY,MAAML,KAAM4G,EAAO/C,aAChB7D,KAAK6X,KAAKjR,EAAOwK,OArSpC,gCA+ScA,GACNpR,KAAKoR,GAAKA,EACVpR,KAAKyX,WAAY,EACjBzX,KAAKyZ,eACLzZ,KAAKoB,aAAa,aAnT1B,qCA0TmB,WACXpB,KAAK0X,cAAchU,SAAQ,SAAC1C,GAAD,OAAU,EAAKsY,UAAUtY,MACpDhB,KAAK0X,cAAgB,GACrB1X,KAAK2X,WAAWjU,SAAQ,SAACkD,GACrB,EAAKiS,wBAAwBjS,GAC7B,EAAKA,OAAOA,MAEhB5G,KAAK2X,WAAa,KAjU1B,qCAyUQ3X,KAAKoZ,UACLpZ,KAAK2S,QAAQ,0BA1UrB,gCAoVY3S,KAAKiY,OAELjY,KAAKiY,KAAKvU,SAAQ,SAACgW,GAAD,OAAgBA,OAClC1Z,KAAKiY,UAAOlQ,GAEhB/H,KAAKwX,GAAL,SAAoBxX,QAzV5B,mCA2WQ,OATIA,KAAKyX,WACLzX,KAAK4G,OAAO,CAAEhD,KAAMmR,EAAW6B,aAGnC5W,KAAKoZ,UACDpZ,KAAKyX,WAELzX,KAAK2S,QAAQ,wBAEV3S,OA3Wf,8BAoXQ,OAAOA,KAAKqX,eApXpB,+BA6Xa1D,GAEL,OADA3T,KAAK8X,MAAMnE,SAAWA,EACf3T,OA/Xf,8BA2ZYmO,GAEJ,OADAnO,KAAK8X,MAAM3J,QAAUA,EACdnO,OA7Zf,4BAsaU2Z,GAGF,OAFA3Z,KAAKuZ,cAAgBvZ,KAAKuZ,eAAiB,GAC3CvZ,KAAKuZ,cAAcrZ,KAAKyZ,GACjB3Z,OAzaf,iCAkbe2Z,GAGP,OAFA3Z,KAAKuZ,cAAgBvZ,KAAKuZ,eAAiB,GAC3CvZ,KAAKuZ,cAAc1D,QAAQ8D,GACpB3Z,OArbf,6BA6bW2Z,GACH,IAAK3Z,KAAKuZ,cACN,OAAOvZ,KAEX,GAAI2Z,GAEA,IADA,IAAMtY,EAAYrB,KAAKuZ,cACd1Y,EAAI,EAAGA,EAAIQ,EAAUX,OAAQG,IAClC,GAAI8Y,IAAatY,EAAUR,GAEvB,OADAQ,EAAUP,OAAOD,EAAG,GACbb,UAKfA,KAAKuZ,cAAgB,GAEzB,OAAOvZ,OA7cf,qCAsdQ,OAAOA,KAAKuZ,eAAiB,KAtdrC,oCAwekBI,GAGV,OAFA3Z,KAAK4Z,sBAAwB5Z,KAAK4Z,uBAAyB,GAC3D5Z,KAAK4Z,sBAAsB1Z,KAAKyZ,GACzB3Z,OA3ef,yCA6fuB2Z,GAGf,OAFA3Z,KAAK4Z,sBAAwB5Z,KAAK4Z,uBAAyB,GAC3D5Z,KAAK4Z,sBAAsB/D,QAAQ8D,GAC5B3Z,OAhgBf,qCAshBmB2Z,GACX,IAAK3Z,KAAK4Z,sBACN,OAAO5Z,KAEX,GAAI2Z,GAEA,IADA,IAAMtY,EAAYrB,KAAK4Z,sBACd/Y,EAAI,EAAGA,EAAIQ,EAAUX,OAAQG,IAClC,GAAI8Y,IAAatY,EAAUR,GAEvB,OADAQ,EAAUP,OAAOD,EAAG,GACbb,UAKfA,KAAK4Z,sBAAwB,GAEjC,OAAO5Z,OAtiBf,6CA+iBQ,OAAOA,KAAK4Z,uBAAyB,KA/iB7C,8CAwjB4BhT,GACpB,GAAI5G,KAAK4Z,uBAAyB5Z,KAAK4Z,sBAAsBlZ,OAAQ,CACjE,IAAMW,EAAYrB,KAAK4Z,sBAAsBzY,QADoB,uBAEjE,YAAuBE,EAAvB,+CAAkC,SACrBhB,MAAML,KAAM4G,EAAO/C,OAHiC,sFAzjB7E,mCA0BQ,OAAQ7D,KAAKyX,YA1BrB,6BAgDQ,QAASzX,KAAKiY,OAhDtB,+BA0YQ,OADAjY,KAAK8X,MAAMc,UAAW,EACf5Y,SA1Yf,GAA4BP,KCLrB,SAASoa,EAAQ3X,GACpBA,EAAOA,GAAQ,GACflC,KAAK8Z,GAAK5X,EAAK6X,KAAO,IACtB/Z,KAAKga,IAAM9X,EAAK8X,KAAO,IACvBha,KAAKia,OAAS/X,EAAK+X,QAAU,EAC7Bja,KAAKka,OAAShY,EAAKgY,OAAS,GAAKhY,EAAKgY,QAAU,EAAIhY,EAAKgY,OAAS,EAClEla,KAAKma,SAAW,EAQpBN,EAAQnb,UAAU0b,SAAW,WACzB,IAAIN,EAAK9Z,KAAK8Z,GAAK/W,KAAKsX,IAAIra,KAAKia,OAAQja,KAAKma,YAC9C,GAAIna,KAAKka,OAAQ,CACb,IAAII,EAAOvX,KAAKwX,SACZC,EAAYzX,KAAK2H,MAAM4P,EAAOta,KAAKka,OAASJ,GAChDA,EAAoC,IAAN,EAAxB/W,KAAK2H,MAAa,GAAP4P,IAAuBR,EAAKU,EAAYV,EAAKU,EAElE,OAAgC,EAAzBzX,KAAKgX,IAAID,EAAI9Z,KAAKga,MAO7BH,EAAQnb,UAAU+b,MAAQ,WACtBza,KAAKma,SAAW,GAOpBN,EAAQnb,UAAUgc,OAAS,SAAUX,GACjC/Z,KAAK8Z,GAAKC,GAOdF,EAAQnb,UAAUic,OAAS,SAAUX,GACjCha,KAAKga,IAAMA,GAOfH,EAAQnb,UAAUkc,UAAY,SAAUV,GACpCla,KAAKka,OAASA,GC1DX,IAAMW,EAAb,YACI,WAAY3N,EAAKhL,GAAM,MACf4Y,EADe,qBAEnB,+CACKC,KAAO,GACZ,EAAK9C,KAAO,GACR/K,GAAO,kBAAoBA,IAC3BhL,EAAOgL,EACPA,OAAMnF,IAEV7F,EAAOA,GAAQ,IACV6K,KAAO7K,EAAK6K,MAAQ,aACzB,EAAK7K,KAAOA,EACZD,YAAsB,eAAMC,GAC5B,EAAK8Y,cAAmC,IAAtB9Y,EAAK8Y,cACvB,EAAKC,qBAAqB/Y,EAAK+Y,sBAAwBC,KACvD,EAAKC,kBAAkBjZ,EAAKiZ,mBAAqB,KACjD,EAAKC,qBAAqBlZ,EAAKkZ,sBAAwB,KACvD,EAAKC,oBAAwD,QAAnCP,EAAK5Y,EAAKmZ,2BAAwC,IAAPP,EAAgBA,EAAK,IAC1F,EAAKQ,QAAU,IAAIzB,EAAQ,CACvBE,IAAK,EAAKoB,oBACVnB,IAAK,EAAKoB,uBACVlB,OAAQ,EAAKmB,wBAEjB,EAAKlN,QAAQ,MAAQjM,EAAKiM,QAAU,IAAQjM,EAAKiM,SACjD,EAAKkK,YAAc,SACnB,EAAKnL,IAAMA,EACX,IAAMqO,EAAUrZ,EAAKsZ,QAAUA,EA1BZ,OA2BnB,EAAKC,QAAU,IAAIF,EAAQvG,QAC3B,EAAK0G,QAAU,IAAIH,EAAQzF,QAC3B,EAAKkC,cAAoC,IAArB9V,EAAKyZ,YACrB,EAAK3D,cACL,EAAKnK,OA/BU,EAD3B,0EAkCiB+N,GACT,OAAKtb,UAAUI,QAEfV,KAAK6b,gBAAkBD,EAChB5b,MAFIA,KAAK6b,gBApCxB,2CAwCyBD,GACjB,YAAU7T,IAAN6T,EACO5b,KAAK8b,uBAChB9b,KAAK8b,sBAAwBF,EACtB5b,QA5Cf,wCA8CsB4b,GACd,IAAId,EACJ,YAAU/S,IAAN6T,EACO5b,KAAK+b,oBAChB/b,KAAK+b,mBAAqBH,EACF,QAAvBd,EAAK9a,KAAKsb,eAA4B,IAAPR,GAAyBA,EAAGJ,OAAOkB,GAC5D5b,QApDf,0CAsDwB4b,GAChB,IAAId,EACJ,YAAU/S,IAAN6T,EACO5b,KAAKgc,sBAChBhc,KAAKgc,qBAAuBJ,EACJ,QAAvBd,EAAK9a,KAAKsb,eAA4B,IAAPR,GAAyBA,EAAGF,UAAUgB,GAC/D5b,QA5Df,2CA8DyB4b,GACjB,IAAId,EACJ,YAAU/S,IAAN6T,EACO5b,KAAKic,uBAChBjc,KAAKic,sBAAwBL,EACL,QAAvBd,EAAK9a,KAAKsb,eAA4B,IAAPR,GAAyBA,EAAGH,OAAOiB,GAC5D5b,QApEf,8BAsEY4b,GACJ,OAAKtb,UAAUI,QAEfV,KAAKkc,SAAWN,EACT5b,MAFIA,KAAKkc,WAxExB,8CAoFalc,KAAKmc,eACNnc,KAAK6b,eACqB,IAA1B7b,KAAKsb,QAAQnB,UAEbna,KAAKoc,cAxFjB,2BAkGSrc,GAAI,WACL,IAAKC,KAAKqY,YAAYrQ,QAAQ,QAC1B,OAAOhI,KACXA,KAAK0Y,OAAS,IAAI2D,EAAOrc,KAAKkN,IAAKlN,KAAKkC,MACxC,IAAM4G,EAAS9I,KAAK0Y,OACdpZ,EAAOU,KACbA,KAAKqY,YAAc,UACnBrY,KAAKsc,eAAgB,EAErB,IAAMC,EAAiB3c,EAAGkJ,EAAQ,QAAQ,WACtCxJ,EAAK4Y,SACLnY,GAAMA,OAGJyc,EAAW5c,EAAGkJ,EAAQ,SAAS,SAACgC,GAClCxL,EAAKsP,UACLtP,EAAK+Y,YAAc,SACnB,EAAKjX,aAAa,QAAS0J,GACvB/K,EACAA,EAAG+K,GAIHxL,EAAKmd,0BAGb,IAAI,IAAUzc,KAAKkc,SAAU,CACzB,IAAM/N,EAAUnO,KAAKkc,SACL,IAAZ/N,GACAoO,IAGJ,IAAMzD,EAAQ9Y,KAAKoC,cAAa,WAC5Bma,IACAzT,EAAOwD,QAEPxD,EAAO/H,KAAK,QAAS,IAAI2H,MAAM,cAChCyF,GACCnO,KAAKkC,KAAKoR,WACVwF,EAAMvF,QAEVvT,KAAKiY,KAAK/X,MAAK,WACX8B,aAAa8W,MAKrB,OAFA9Y,KAAKiY,KAAK/X,KAAKqc,GACfvc,KAAKiY,KAAK/X,KAAKsc,GACRxc,OAjJf,8BAyJYD,GACJ,OAAOC,KAAK6N,KAAK9N,KA1JzB,+BAmKQC,KAAK4O,UAEL5O,KAAKqY,YAAc,OACnBrY,KAAKoB,aAAa,QAElB,IAAM0H,EAAS9I,KAAK0Y,OACpB1Y,KAAKiY,KAAK/X,KAAKN,EAAGkJ,EAAQ,OAAQ9I,KAAK0c,OAAOra,KAAKrC,OAAQJ,EAAGkJ,EAAQ,OAAQ9I,KAAK2c,OAAOta,KAAKrC,OAAQJ,EAAGkJ,EAAQ,QAAS9I,KAAKwS,QAAQnQ,KAAKrC,OAAQJ,EAAGkJ,EAAQ,QAAS9I,KAAK2S,QAAQtQ,KAAKrC,OAAQJ,EAAGI,KAAK0b,QAAS,UAAW1b,KAAK4c,UAAUva,KAAKrC,UAzK3P,+BAiLQA,KAAKoB,aAAa,UAjL1B,6BAwLWyC,GACH7D,KAAK0b,QAAQmB,IAAIhZ,KAzLzB,gCAgMc+C,GACN5G,KAAKoB,aAAa,SAAUwF,KAjMpC,8BAwMYkE,GACJ9K,KAAKoB,aAAa,QAAS0J,KAzMnC,6BAiNW4K,EAAKxT,GACR,IAAI4G,EAAS9I,KAAK+a,KAAKrF,GAKvB,OAJK5M,IACDA,EAAS,IAAI2H,EAAOzQ,KAAM0V,EAAKxT,GAC/BlC,KAAK+a,KAAKrF,GAAO5M,GAEdA,IAvNf,+BA+NaA,GAEL,IADA,IACA,MADa5K,OAAOuF,KAAKzD,KAAK+a,MAC9B,eAAwB,CAAnB,IAAMrF,EAAG,KAEV,GADe1V,KAAK+a,KAAKrF,GACdoH,OACP,OAGR9c,KAAK+c,WAvOb,8BA+OYnW,GAEJ,IADA,IAAMF,EAAiB1G,KAAKyb,QAAQnS,OAAO1C,GAClC/F,EAAI,EAAGA,EAAI6F,EAAehG,OAAQG,IACvCb,KAAK0Y,OAAOxP,MAAMxC,EAAe7F,GAAI+F,EAAO8M,WAlPxD,gCA2PQ1T,KAAKiY,KAAKvU,SAAQ,SAACgW,GAAD,OAAgBA,OAClC1Z,KAAKiY,KAAKvX,OAAS,EACnBV,KAAK0b,QAAQtC,YA7PrB,+BAqQQpZ,KAAKsc,eAAgB,EACrBtc,KAAKmc,eAAgB,EACrBnc,KAAK2S,QAAQ,gBACT3S,KAAK0Y,QACL1Y,KAAK0Y,OAAOpM,UAzQxB,mCAiRQ,OAAOtM,KAAK+c,WAjRpB,8BAwRYxU,EAAQC,GACZxI,KAAK4O,UACL5O,KAAKsb,QAAQb,QACbza,KAAKqY,YAAc,SACnBrY,KAAKoB,aAAa,QAASmH,EAAQC,GAC/BxI,KAAK6b,gBAAkB7b,KAAKsc,eAC5Btc,KAAKoc,cA9RjB,kCAsSgB,WACR,GAAIpc,KAAKmc,eAAiBnc,KAAKsc,cAC3B,OAAOtc,KACX,IAAMV,EAAOU,KACb,GAAIA,KAAKsb,QAAQnB,UAAYna,KAAK8b,sBAC9B9b,KAAKsb,QAAQb,QACbza,KAAKoB,aAAa,oBAClBpB,KAAKmc,eAAgB,MAEpB,CACD,IAAMa,EAAQhd,KAAKsb,QAAQlB,WAC3Bpa,KAAKmc,eAAgB,EACrB,IAAMrD,EAAQ9Y,KAAKoC,cAAa,WACxB9C,EAAKgd,gBAET,EAAKlb,aAAa,oBAAqB9B,EAAKgc,QAAQnB,UAEhD7a,EAAKgd,eAEThd,EAAKuO,MAAK,SAAC/C,GACHA,GACAxL,EAAK6c,eAAgB,EACrB7c,EAAK8c,YACL,EAAKhb,aAAa,kBAAmB0J,IAGrCxL,EAAK2d,oBAGdD,GACChd,KAAKkC,KAAKoR,WACVwF,EAAMvF,QAEVvT,KAAKiY,KAAK/X,MAAK,WACX8B,aAAa8W,SAxU7B,oCAkVQ,IAAMoE,EAAUld,KAAKsb,QAAQnB,SAC7Bna,KAAKmc,eAAgB,EACrBnc,KAAKsb,QAAQb,QACbza,KAAKoB,aAAa,YAAa8b,OArVvC,GAA6Bzd,KCN7B,kCAMA,IAAM0d,EAAQ,GACd,SAASlY,EAAOiI,EAAKhL,GACE,kBAARgL,IACPhL,EAAOgL,EACPA,OAAMnF,GAGV,IASIyP,EATE4F,ECHH,SAAalQ,GAAqB,IAAhBH,EAAgB,uDAAT,GAAIsQ,EAAK,uCACjCpe,EAAMiO,EAEVmQ,EAAMA,GAA4B,qBAAb7R,UAA4BA,SAC7C,MAAQ0B,IACRA,EAAMmQ,EAAIpW,SAAW,KAAOoW,EAAItN,MAEjB,kBAAR7C,IACH,MAAQA,EAAI/G,OAAO,KAEf+G,EADA,MAAQA,EAAI/G,OAAO,GACbkX,EAAIpW,SAAWiG,EAGfmQ,EAAItN,KAAO7C,GAGpB,sBAAsBoQ,KAAKpQ,KAExBA,EADA,qBAAuBmQ,EACjBA,EAAIpW,SAAW,KAAOiG,EAGtB,WAAaA,GAI3BjO,EAAMuQ,EAAMtC,IAGXjO,EAAIyM,OACD,cAAc4R,KAAKre,EAAIgI,UACvBhI,EAAIyM,KAAO,KAEN,eAAe4R,KAAKre,EAAIgI,YAC7BhI,EAAIyM,KAAO,QAGnBzM,EAAI8N,KAAO9N,EAAI8N,MAAQ,IACvB,IACMgD,GADkC,IAA3B9Q,EAAI8Q,KAAK/H,QAAQ,KACV,IAAM/I,EAAI8Q,KAAO,IAAM9Q,EAAI8Q,KAS/C,OAPA9Q,EAAImS,GAAKnS,EAAIgI,SAAW,MAAQ8I,EAAO,IAAM9Q,EAAIyM,KAAOqB,EAExD9N,EAAIse,KACAte,EAAIgI,SACA,MACA8I,GACCsN,GAAOA,EAAI3R,OAASzM,EAAIyM,KAAO,GAAK,IAAMzM,EAAIyM,MAChDzM,ED5CQue,CAAItQ,GADnBhL,EAAOA,GAAQ,IACc6K,MAAQ,cAC/B+C,EAASsN,EAAOtN,OAChBsB,EAAKgM,EAAOhM,GACZrE,EAAOqQ,EAAOrQ,KACd0Q,EAAgBN,EAAM/L,IAAOrE,KAAQoQ,EAAM/L,GAAN,KAkB3C,OAjBsBlP,EAAKwb,UACvBxb,EAAK,0BACL,IAAUA,EAAKyb,WACfF,EAGAjG,EAAK,IAAIqD,EAAQ/K,EAAQ5N,IAGpBib,EAAM/L,KACP+L,EAAM/L,GAAM,IAAIyJ,EAAQ/K,EAAQ5N,IAEpCsV,EAAK2F,EAAM/L,IAEXgM,EAAOxU,QAAU1G,EAAK0G,QACtB1G,EAAK0G,MAAQwU,EAAO/M,UAEjBmH,EAAG1O,OAAOsU,EAAOrQ,KAAM7K,GAIlChE,OAAO8O,OAAO/H,EAAQ,CAClB4V,UACApK,SACA+G,GAAIvS,EACJkS,QAASlS,K,qLEpCP2Y,EAAqC,qBAAdC,WACI,kBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cACT1O,EAAb,YAOI,WAAYnN,GAAM,kCACd,4CAAMA,KACD2C,gBAAkB3C,EAAK6J,YAFd,EAPtB,sEAyBQ,GAAK/L,KAAKge,QAAV,CAIA,IAAM9Q,EAAMlN,KAAKkN,MACX+Q,EAAYje,KAAKkC,KAAK+b,UAEtB/b,EAAO0b,EACP,GACArc,YAAKvB,KAAKkC,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMlC,KAAKkC,KAAK4L,eACV5L,EAAKgc,QAAUle,KAAKkC,KAAK4L,cAE7B,IACI9N,KAAKme,GACDC,MAA0BR,EACpBK,EACI,IAAII,IAAUnR,EAAK+Q,GACnB,IAAII,IAAUnR,GAClB,IAAImR,IAAUnR,EAAK+Q,EAAW/b,GAE5C,MAAO4I,GACH,OAAO9K,KAAKoB,aAAa,QAAS0J,GAEtC9K,KAAKme,GAAG/Y,WAAapF,KAAK8I,OAAO1D,YAAckZ,IAC/Cte,KAAKue,uBAlDb,0CAyDwB,WAChBve,KAAKme,GAAGjG,OAAS,WACT,EAAKhW,KAAKoR,WACV,EAAK6K,GAAGK,QAAQjL,QAEpB,EAAKlH,UAETrM,KAAKme,GAAGxL,QAAU,SAAA8L,GAAU,OAAI,EAAKxV,QAAQ,CACzCT,YAAa,8BACbC,QAASgW,KAEbze,KAAKme,GAAGO,UAAY,SAAA1H,GAAE,OAAI,EAAKxJ,OAAOwJ,EAAGnT,OACzC7D,KAAKme,GAAG3L,QAAU,SAAA/K,GAAC,OAAI,EAAK8F,QAAQ,kBAAmB9F,MArE/D,4BA6EUhB,GAAS,WACXzG,KAAKlB,UAAW,EAGhB,IAJW,eAIF+B,GACL,IAAM+F,EAASH,EAAQ5F,GACjB8d,EAAa9d,IAAM4F,EAAQ/F,OAAS,EAC1CkE,YAAagC,EAAQ,EAAK/B,gBAAgB,SAAAhB,GAEtC,IAAM3B,EAAO,GACRkc,MACGxX,EAAO8M,UACPxR,EAAKyR,SAAW/M,EAAO8M,QAAQC,UAE/B,EAAKzR,KAAK8O,oBAGV,kBAAoBnN,EAAO+a,EAAOnc,WAAWoB,GAAQA,EAAKnD,QAChD,EAAKwB,KAAK8O,kBAAkBC,YAClC/O,EAAKyR,UAAW,IAO5B,IACQyK,IAEA,EAAKD,GAAG5P,KAAK1K,GAGb,EAAKsa,GAAG5P,KAAK1K,EAAM3B,GAG3B,MAAOuF,IAEHkX,GAGAE,aAAS,WACL,EAAK/f,UAAW,EAChB,EAAKsC,aAAa,WACnB,EAAKgB,kBAvCXvB,EAAI,EAAGA,EAAI4F,EAAQ/F,OAAQG,IAAK,EAAhCA,KAjFjB,gCAmI+B,qBAAZb,KAAKme,KACZne,KAAKme,GAAG7R,QACRtM,KAAKme,GAAK,QArItB,4BA8IQ,IAAIvV,EAAQ5I,KAAK4I,OAAS,GACpB4D,EAASxM,KAAKkC,KAAK4J,OAAS,MAAQ,KACtCJ,EAAO,GAEP1L,KAAKkC,KAAKwJ,OACR,QAAUc,GAAqC,MAA3BK,OAAO7M,KAAKkC,KAAKwJ,OAClC,OAASc,GAAqC,KAA3BK,OAAO7M,KAAKkC,KAAKwJ,SACzCA,EAAO,IAAM1L,KAAKkC,KAAKwJ,MAGvB1L,KAAKkC,KAAKuK,oBACV7D,EAAM5I,KAAKkC,KAAKwK,gBAAkB/B,eAGjC3K,KAAK6E,iBACN+D,EAAMgE,IAAM,GAEhB,IAAME,EAAexD,YAAOV,GAE5B,OAAQ4D,EACJ,QAF8C,IAArCxM,KAAKkC,KAAK0J,SAAS5D,QAAQ,KAG5B,IAAMhI,KAAKkC,KAAK0J,SAAW,IAAM5L,KAAKkC,KAAK0J,UACnDF,EACA1L,KAAKkC,KAAK6K,MACTD,EAAapM,OAAS,IAAMoM,EAAe,MAtKxD,8BA+KQ,QAASuR,MA/KjB,2BAiBQ,MAAO,gBAjBf,GAAwB1V,O,0DCVxB,qJACakW,EACqC,oBAAZC,SAAqD,oBAApBA,QAAQC,QAEhE,SAAApe,GAAE,OAAIme,QAAQC,UAAUC,KAAKre,IAG7B,SAACA,EAAIyB,GAAL,OAAsBA,EAAazB,EAAI,IAGzC0d,EAAY/b,IAAW+b,WAAa/b,IAAW2c,aAC/Cb,GAAwB,EACxBE,EAAoB","file":"static/js/0.e25d497e.chunk.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import setPrototypeOf from \"./setPrototypeOf\";\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n"],"sourceRoot":""}