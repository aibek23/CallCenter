{"version":3,"sources":["pages/NewsPage.js"],"names":["NewsPage","auth","useContext","Context","useState","data","setData","filteredResults","setFilteredResults","searchInput","setSearchInput","useEffect","a","async","axios","get","headers","Authorization","token","res","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","fetchData","newestOnTop","rtl","pauseOnFocusLoss","className","type","onChange","e","searchValue","filteredData","filter","item","Object","values","join","toLowerCase","includes","handleSearchInput","target","value","style","border","borderRadius","placeholder","id","length","map","links","props"],"mappings":"gNAkGeA,UAzFE,WACb,IAAMC,EAAQC,qBAAWC,KADN,EAEKC,mBAAS,IAFd,mBAEZC,EAFY,KAENC,EAFM,OAG2BF,mBAAS,IAHpC,mBAGZG,EAHY,KAGKC,EAHL,OAImBJ,mBAAS,IAJ5B,mBAIZK,EAJY,KAICC,EAJD,KAwBnBC,qBAAU,YAlBQ,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEQE,IAAMC,IAAI,gBAAiB,CACzCC,QAAS,CAAEC,cAAc,UAAD,OAAYhB,EAAKiB,WAHnC,OAEJC,EAFI,OAKVb,EAAQa,EAAId,MACZG,EAAmBW,EAAId,MANb,gDAQVe,IAAMC,MAAM,KAAMC,QAAS,CACvBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAdL,wDAmBdC,KACD,IAmBH,OACI,oCACI,kBAAC,IAAD,CACIN,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBK,aAAa,EACbJ,cAAY,EACZK,KAAK,EACLC,kBAAgB,EAChBJ,WAAS,EACTD,cAAY,IAEhB,yBAAKM,UAAU,kBACX,yBAAKA,UAAU,4BACX,2BACIC,KAAK,SACLD,UAAU,eACVE,SAAU,SAACC,GAAD,OAnCJ,SAACC,GAEvB,GADA3B,EAAe2B,GACK,KAAhBA,EAAoB,CACpB,IAAMC,EAAejC,EAAKkC,QAAO,SAACC,GAAD,OAC7BC,OAAOC,OAAOF,GAAMG,KAAK,IAAIC,cAAcC,SAASR,EAAYO,kBAEpEpC,EAAmB8B,QAEnB9B,EAAmBH,GA2BUyC,CAAkBV,EAAEW,OAAOC,QAC5CC,MAAO,CACHC,OAAQ,oBACRC,aAAc,iBAElBC,YAAY,qFAEhB,0BACInB,UAAU,0BACVgB,MAAO,CACHC,OAAQ,qBACRC,aAAc,iBAElBE,GAAG,gBAEH,uBAAGpB,UAAU,oBAKpB5B,EAAKiD,OAAS,EAAI7C,EAAY6C,OAAS,EAAI/C,EAAgBgD,KAAI,SAACC,GAAD,OAAW,kBAAC,IAAD,CAAUC,MAAOD,OAAa,kBAAC,IAAD,CAAUC,MAAOpD,IAAY,kBAAC,IAAD","file":"static/js/7.73e40208.chunk.js","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport axios from \"axios\";\r\nimport { Loader } from '../components/Loader';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport NewsList from '../components/NewsList';\r\nimport { Context } from '../context/Context';\r\nconst NewsPage = () => {\r\n    const auth  = useContext(Context);\r\n    const [data, setData] = useState([]);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n    const [searchInput, setSearchInput] = useState('');\r\n    // Получение данных с сервера при монтировании компонента\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await axios.get('/api/news/all', {\r\n                headers: { Authorization: `Bearer ${auth.token}` },\r\n            });\r\n            setData(res.data);\r\n            setFilteredResults(res.data); // Устанавливаем исходные данные как отфильтрованные\r\n        } catch (error) {\r\n            toast.error(error.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n            });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n    // Обработчик изменения входных данных поиска\r\n    const handleSearchInput = (searchValue) => {\r\n        setSearchInput(searchValue);\r\n        if (searchValue !== '') {\r\n            const filteredData = data.filter((item) =>\r\n                Object.values(item).join('').toLowerCase().includes(searchValue.toLowerCase())\r\n            );\r\n            setFilteredResults(filteredData);\r\n        } else {\r\n            setFilteredResults(data); // Если ввод пустой, показываем все данные\r\n        }\r\n    };\r\n\r\n    // Если данные загружаются, показываем Loader\r\n    // if (!data.length) {\r\n    //     return <Loader />;\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"container pt-5\">\r\n                <div className=\"input-group rounded mb-5\">\r\n                    <input\r\n                        type=\"search\"\r\n                        className=\"form-control\"\r\n                        onChange={(e) => handleSearchInput(e.target.value)}\r\n                        style={{\r\n                            border: 'solid 5px #DEE2E6',\r\n                            borderRadius: '1rem 0 0 1rem',\r\n                        }}\r\n                        placeholder=\"Поиск новостей \"\r\n                    />\r\n                    <span\r\n                        className=\"input-group-text border\"\r\n                        style={{\r\n                            border: 'solid 10px #DEE2E6',\r\n                            borderRadius: '0 1rem 1rem 0',\r\n                        }}\r\n                        id=\"search-addon\"\r\n                    >\r\n                        <i className=\"fas fa-search\"></i>\r\n                    </span>\r\n                </div>\r\n                {/* Отображаем результаты поиска или все данные */}\r\n               \r\n                {data.length > 0 ? searchInput.length > 1 ? filteredResults.map((links) => <NewsList props={links} />) : <NewsList props={data} /> : (<Loader/>)}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewsPage;"],"sourceRoot":""}